{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\ReactProj\\\\login-page\\\\src\\\\components\\\\FormV2.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Question1 from './Questions/Question1';\nimport Question1a from './Questions/Question1a';\nimport Question2 from './Questions/Question2';\nimport Infotest from './Info/Infotest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet nextQuestions = [];\nconst questionsAnswered = [\"q1\", \"q2\"];\nconst answers = {\n  //need to define answer for input field questions to stop error: \"A component is changing an uncontrolled input of type text\"\n  q1: \"\",\n  q1a: \"\",\n  q2: \"\"\n};\nconst questionHistory = [{\n  questionName: \"q1\",\n  nextQuestionsHistory: []\n}];\n\nclass FormV2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onBackButton = event => {\n      event.preventDefault();\n      questionHistory.pop();\n      const lastQuestion = questionHistory[questionHistory.length - 1];\n      nextQuestions = lastQuestion.nextQuestionsHistory;\n      this.setState({\n        currentQuestion: lastQuestion.questionName,\n        showInfoState: false,\n        questionCounter: this.state.questionCounter - 1\n      }, () => {\n        console.log(lastQuestion.questionName);\n\n        if (answers[lastQuestion.questionName]) {\n          return;\n        }\n\n        this.progressBar();\n      }); // console.dir(nextQuestions);\n      // console.dir(questionHistory);\n    };\n\n    this.onInfoButton = event => {\n      event.preventDefault();\n\n      if (this.state.showInfoState === false) {\n        this.setState({\n          showInfoState: true\n        });\n      }\n\n      if (this.state.showInfoState === true) {\n        this.setState({\n          showInfoState: false\n        });\n      }\n    };\n\n    this.onQuestionSubmit = (questionName, answer, nextQs) => {\n      answers[questionName] = answer;\n\n      if (answers.q1 === \"NO\") {\n        answers.q1a = \"\";\n      } // if(answer === \"YES\"){\n      //     if(questionsAnswered.includes(\"q1a\")){\n      //         const indexToRemove = questionsAnswered.indexOf(\"q1a\")\n      //         questionsAnswered.splice(indexToRemove, 1);\n      //     }\n      //     questionsAnswered.push(\"q1a\");\n      // }\n      // if(answer ===\"NO\"){\n      //     const indexToRemove = questionsAnswered.indexOf(\"q1a\")\n      //     questionsAnswered.splice(indexToRemove, 1);\n      // }\n\n\n      nextQuestions.shift();\n      nextQuestions.push(...nextQs);\n      questionHistory.push({\n        questionName: nextQuestions[0],\n        nextQuestionsHistory: nextQuestions.concat()\n      });\n      this.setState({\n        currentQuestion: nextQuestions[0],\n        showInfoState: false,\n        questionCounter: this.state.questionCounter + 1\n      }, () => {\n        this.progressBar();\n      });\n      console.log(questionName, answer); // console.dir(nextQuestions);\n\n      console.dir(answers); // console.dir(questionHistory);\n\n      console.log(\"\\n\");\n    };\n\n    this.state = {\n      currentQuestion: \"q1\",\n      showInfoState: false,\n      questionCounter: 0,\n      progress: null\n    };\n  } // progressBar = () => {\n  //     const numQuestions = questionsAnswered.length;\n  //     const progress = (this.state.questionCounter / numQuestions);\n  //     this.setState({\n  //         progress: progress\n  //     }, () => {console.log(this.state.progress, progress)})\n  // }\n\n\n  render() {\n    const {\n      currentQuestion\n    } = this.state;\n    const progressBarStylePercent = this.state.progress * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Form v2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Question \", currentQuestion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), this.state.currentQuestion === \"q1\" && /*#__PURE__*/_jsxDEV(Question1, {\n            initialvalue: answers[\"q1\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q1a\" && /*#__PURE__*/_jsxDEV(Question1a, {\n            initialvalue: answers[\"q1a\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q2\" && /*#__PURE__*/_jsxDEV(Question2, {\n            initialvalue: answers[\"q2\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), this.state.showInfoState && /*#__PURE__*/_jsxDEV(Infotest, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"last-question-btn\",\n            onClick: this.onBackButton,\n            disabled: questionHistory.length === 1,\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"info-btn\",\n            onClick: this.onInfoButton,\n            children: \"More Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              style: {\n                width: progressBarStylePercent + '%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FormV2;","map":{"version":3,"sources":["C:/Users/sawye/Coding/ReactProj/login-page/src/components/FormV2.js"],"names":["React","Component","Link","Question1","Question1a","Question2","Infotest","nextQuestions","questionsAnswered","answers","q1","q1a","q2","questionHistory","questionName","nextQuestionsHistory","FormV2","constructor","props","onBackButton","event","preventDefault","pop","lastQuestion","length","setState","currentQuestion","showInfoState","questionCounter","state","console","log","progressBar","onInfoButton","onQuestionSubmit","answer","nextQs","shift","push","concat","dir","progress","render","progressBarStylePercent","onSubmit","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,IAAIC,aAAa,GAAE,EAAnB;AAIA,MAAMC,iBAAiB,GAAG,CACtB,IADsB,EAEtB,IAFsB,CAA1B;AAKA,MAAMC,OAAO,GAAG;AACZ;AACAC,EAAAA,EAAE,EAAE,EAFQ;AAGZC,EAAAA,GAAG,EAAE,EAHO;AAIZC,EAAAA,EAAE,EAAE;AAJQ,CAAhB;AAOA,MAAMC,eAAe,GAAG,CACxB;AACIC,EAAAA,YAAY,EAAE,IADlB;AAEIC,EAAAA,oBAAoB,EAAE;AAF1B,CADwB,CAAxB;;AAOA,MAAMC,MAAN,SAAqBf,SAArB,CAA+B;AAE3BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBnBC,YAnBmB,GAmBHC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AAEAR,MAAAA,eAAe,CAACS,GAAhB;AACA,YAAMC,YAAY,GAAGV,eAAe,CAACA,eAAe,CAACW,MAAhB,GAAuB,CAAxB,CAApC;AACAjB,MAAAA,aAAa,GAAGgB,YAAY,CAACR,oBAA7B;AACA,WAAKU,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEH,YAAY,CAACT,YADpB;AAEVa,QAAAA,aAAa,EAAE,KAFL;AAGVC,QAAAA,eAAe,EAAE,KAAKC,KAAL,CAAWD,eAAX,GAA2B;AAHlC,OAAd,EAIG,MAAM;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACT,YAAzB;;AACA,YAAGL,OAAO,CAACc,YAAY,CAACT,YAAd,CAAV,EAAsC;AAClC;AACH;;AACD,aAAKkB,WAAL;AACH,OAVD,EANsB,CAiBtB;AACA;AACH,KAtCkB;;AAAA,SAwCnBC,YAxCmB,GAwCHb,KAAD,IAAU;AACrBA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG,KAAKQ,KAAL,CAAWF,aAAX,KAA6B,KAAhC,EAAsC;AAClC,aAAKF,QAAL,CAAc;AACVE,UAAAA,aAAa,EAAE;AADL,SAAd;AAGH;;AAED,UAAG,KAAKE,KAAL,CAAWF,aAAX,KAA6B,IAAhC,EAAqC;AACjC,aAAKF,QAAL,CAAc;AACVE,UAAAA,aAAa,EAAE;AADL,SAAd;AAGH;AACJ,KArDkB;;AAAA,SAuDnBO,gBAvDmB,GAuDA,CAACpB,YAAD,EAAeqB,MAAf,EAAuBC,MAAvB,KAAkC;AACjD3B,MAAAA,OAAO,CAACK,YAAD,CAAP,GAAwBqB,MAAxB;;AAEA,UAAG1B,OAAO,CAACC,EAAR,KAAe,IAAlB,EAAuB;AACnBD,QAAAA,OAAO,CAACE,GAAR,GAAc,EAAd;AACH,OALgD,CAMjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAJ,MAAAA,aAAa,CAAC8B,KAAd;AACA9B,MAAAA,aAAa,CAAC+B,IAAd,CAAmB,GAAGF,MAAtB;AAEAvB,MAAAA,eAAe,CAACyB,IAAhB,CAAqB;AACjBxB,QAAAA,YAAY,EAAEP,aAAa,CAAC,CAAD,CADV;AAEjBQ,QAAAA,oBAAoB,EAAER,aAAa,CAACgC,MAAd;AAFL,OAArB;AAKA,WAAKd,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEnB,aAAa,CAAC,CAAD,CADpB;AAEVoB,QAAAA,aAAa,EAAE,KAFL;AAGVC,QAAAA,eAAe,EAAE,KAAKC,KAAL,CAAWD,eAAX,GAA2B;AAHlC,OAAd,EAIG,MAAM;AAAC,aAAKI,WAAL;AAAmB,OAJ7B;AAKAF,MAAAA,OAAO,CAACC,GAAR,CAAYjB,YAAZ,EAA0BqB,MAA1B,EA/BiD,CAgCjD;;AACAL,MAAAA,OAAO,CAACU,GAAR,CAAY/B,OAAZ,EAjCiD,CAkCjD;;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KA3FkB;;AAGf,SAAKF,KAAL,GAAa;AACTH,MAAAA,eAAe,EAAE,IADR;AAETC,MAAAA,aAAa,EAAE,KAFN;AAGTC,MAAAA,eAAe,EAAE,CAHR;AAITa,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAMH,GAX0B,CAa3B;AACA;AACA;AACA;AACA;AACA;AACA;;;AA4EAC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAChB,MAAAA;AAAD,QAAoB,KAAKG,KAA/B;AAEA,UAAMc,uBAAuB,GAAG,KAAKd,KAAL,CAAWY,QAAX,GAAsB,GAAtD;AAEA,wBACI;AAAA,8BAEI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAA,+BACA;AAAM,UAAA,QAAQ,EAAE,KAAKG,QAArB;AAAA,kCAEI;AAAA,oCAAclB,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIK,KAAKG,KAAL,CAAWH,eAAX,KAA+B,IAA/B,iBACG,QAAC,SAAD;AAAW,YAAA,YAAY,EAAEjB,OAAO,CAAC,IAAD,CAAhC;AAAwC,YAAA,QAAQ,EAAE,KAAKyB;AAAvD;AAAA;AAAA;AAAA;AAAA,kBALR,EASK,KAAKL,KAAL,CAAWH,eAAX,KAA+B,KAA/B,iBACG,QAAC,UAAD;AAAY,YAAA,YAAY,EAAEjB,OAAO,CAAC,KAAD,CAAjC;AAA0C,YAAA,QAAQ,EAAE,KAAKyB;AAAzD;AAAA;AAAA;AAAA;AAAA,kBAVR,EAaK,KAAKL,KAAL,CAAWH,eAAX,KAA+B,IAA/B,iBACG,QAAC,SAAD;AAAW,YAAA,YAAY,EAAEjB,OAAO,CAAC,IAAD,CAAhC;AAAwC,YAAA,QAAQ,EAAE,KAAKyB;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAdR,EAiBK,KAAKL,KAAL,CAAWF,aAAX,iBACG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAlBR,eAqBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,mBAAhC;AAAoD,YAAA,OAAO,EAAE,KAAKR,YAAlE;AAAgF,YAAA,QAAQ,EAAEN,eAAe,CAACW,MAAhB,KAA2B,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ,eAsBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,UAAhC;AAA2C,YAAA,OAAO,EAAE,KAAKS,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBJ,eAuBI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,cAAf;AAA8B,cAAA,KAAK,EAAE;AAACY,gBAAAA,KAAK,EAAEF,uBAAuB,GAAG;AAAlC;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwCH;;AA7I0B;;AAgJ/B,eAAe3B,MAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Question1 from './Questions/Question1';\r\nimport Question1a from './Questions/Question1a';\r\nimport Question2 from './Questions/Question2';\r\nimport Infotest from './Info/Infotest';\r\n\r\nlet nextQuestions =[\r\n\r\n];\r\n\r\nconst questionsAnswered = [\r\n    \"q1\",\r\n    \"q2\",\r\n]\r\n\r\nconst answers = {\r\n    //need to define answer for input field questions to stop error: \"A component is changing an uncontrolled input of type text\"\r\n    q1: \"\",\r\n    q1a: \"\",\r\n    q2: \"\",\r\n};\r\n\r\nconst questionHistory = [\r\n{\r\n    questionName: \"q1\",\r\n    nextQuestionsHistory: []\r\n},\r\n];\r\n\r\nclass FormV2 extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            currentQuestion: \"q1\",\r\n            showInfoState: false,\r\n            questionCounter: 0,\r\n            progress: null,\r\n        };\r\n    }\r\n    \r\n    // progressBar = () => {\r\n    //     const numQuestions = questionsAnswered.length;\r\n    //     const progress = (this.state.questionCounter / numQuestions);\r\n    //     this.setState({\r\n    //         progress: progress\r\n    //     }, () => {console.log(this.state.progress, progress)})\r\n    // }\r\n\r\n    onBackButton = (event) => {\r\n        event.preventDefault();\r\n        \r\n        questionHistory.pop();\r\n        const lastQuestion = questionHistory[questionHistory.length-1];\r\n        nextQuestions = lastQuestion.nextQuestionsHistory; \r\n        this.setState({\r\n            currentQuestion: lastQuestion.questionName,\r\n            showInfoState: false,\r\n            questionCounter: this.state.questionCounter-1\r\n        }, () => {\r\n            console.log(lastQuestion.questionName);\r\n            if(answers[lastQuestion.questionName]){\r\n                return;\r\n            }\r\n            this.progressBar();\r\n        })\r\n        // console.dir(nextQuestions);\r\n        // console.dir(questionHistory);\r\n    }\r\n\r\n    onInfoButton = (event) =>{\r\n        event.preventDefault();\r\n        if(this.state.showInfoState === false){\r\n            this.setState({\r\n                showInfoState: true\r\n            })\r\n        }\r\n\r\n        if(this.state.showInfoState === true){\r\n            this.setState({\r\n                showInfoState: false\r\n            })\r\n        }\r\n    }\r\n\r\n    onQuestionSubmit = (questionName, answer, nextQs) => {\r\n        answers[questionName] = answer;\r\n\r\n        if(answers.q1 === \"NO\"){\r\n            answers.q1a = \"\";\r\n        }\r\n        // if(answer === \"YES\"){\r\n        //     if(questionsAnswered.includes(\"q1a\")){\r\n        //         const indexToRemove = questionsAnswered.indexOf(\"q1a\")\r\n        //         questionsAnswered.splice(indexToRemove, 1);\r\n        //     }\r\n        //     questionsAnswered.push(\"q1a\");\r\n        // }\r\n        // if(answer ===\"NO\"){\r\n        //     const indexToRemove = questionsAnswered.indexOf(\"q1a\")\r\n        //     questionsAnswered.splice(indexToRemove, 1);\r\n        // }\r\n\r\n        nextQuestions.shift();\r\n        nextQuestions.push(...nextQs);\r\n\r\n        questionHistory.push({\r\n            questionName: nextQuestions[0],\r\n            nextQuestionsHistory: nextQuestions.concat()\r\n        })\r\n\r\n        this.setState({\r\n            currentQuestion: nextQuestions[0],\r\n            showInfoState: false,\r\n            questionCounter: this.state.questionCounter+1\r\n        }, () => {this.progressBar()})\r\n        console.log(questionName, answer);\r\n        // console.dir(nextQuestions);\r\n        console.dir(answers);\r\n        // console.dir(questionHistory);\r\n        console.log(\"\\n\");\r\n    }\r\n   \r\n    render() {\r\n       \r\n        const {currentQuestion} = this.state;\r\n        \r\n        const progressBarStylePercent = this.state.progress * 100;\r\n\r\n        return (\r\n            <div>\r\n                \r\n                <div>\r\n                    <h1>Form v2</h1>\r\n                </div>\r\n\r\n                <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    \r\n                    <h5>Question {currentQuestion}</h5>\r\n\r\n                    {this.state.currentQuestion === \"q1\" && (\r\n                        <Question1 initialvalue={answers[\"q1\"]} onSubmit={this.onQuestionSubmit}></Question1>\r\n                    )}\r\n                    \r\n                    \r\n                    {this.state.currentQuestion === \"q1a\" && (\r\n                        <Question1a initialvalue={answers[\"q1a\"]} onSubmit={this.onQuestionSubmit}></Question1a>\r\n                    )}\r\n\r\n                    {this.state.currentQuestion === \"q2\" && (\r\n                        <Question2 initialvalue={answers[\"q2\"]} onSubmit={this.onQuestionSubmit}></Question2>\r\n                    )}\r\n\r\n                    {this.state.showInfoState && (\r\n                        <Infotest></Infotest>\r\n                    )}\r\n\r\n                    <button type=\"button\" className=\"last-question-btn\" onClick={this.onBackButton} disabled={questionHistory.length === 1}>Go Back</button>\r\n                    <button type=\"button\" className=\"info-btn\" onClick={this.onInfoButton}>More Info</button>\r\n                    <div className=\"progress-bar-container\">\r\n                        <div className=\"progress-bar\" style={{width: progressBarStylePercent + '%'}}>\r\n                            \r\n                        </div>\r\n                    </div>    \r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormV2"]},"metadata":{},"sourceType":"module"}