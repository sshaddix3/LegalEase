{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\ReactProj\\\\login-page\\\\src\\\\components\\\\FormV3.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Question1 from './Questions/Question1';\nimport Question1a from './Questions/Question1a';\nimport Question2 from './Questions/Question2';\nimport Infotest from './Info/Infotest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questionsAnswered = [\"q1\", \"q2\"];\nconst answers = {};\n\nclass FormV3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.progressBar = () => {\n      const numQuestions = questionsAnswered.length;\n      const progress = this.state.questionCounter / numQuestions;\n      this.setState({\n        progress: progress\n      });\n    };\n\n    this.onBackButton = event => {\n      event.preventDefault();\n    };\n\n    this.onInfoButton = event => {\n      event.preventDefault();\n\n      if (this.state.showInfoState === false) {\n        this.setState({\n          showInfoState: true\n        });\n      }\n\n      if (this.state.showInfoState === true) {\n        this.setState({\n          showInfoState: false\n        });\n      }\n    };\n\n    this.getQuestions = () => {\n      const questions = [\"q1\"];\n\n      if (answers[\"q1\"] === \"YES\") {\n        questions.push(\"q1a\");\n      }\n\n      questions.push(\"q2\");\n      questions.push(\"q3\");\n      return questions;\n    };\n\n    this.onQuestionSubmit = (questionName, questionAnswer) => {\n      answers[questionName] = questionAnswer; // get question list\n\n      const questions = getQuestions; // find the current question in list\n\n      const currentQIndex = questions.indexOf(questionName); // find the next question in the list\n\n      const nextQIndex = currentQIndex + 1;\n      console.log(questions); //------------PROGRESS BAR STUFF--------------------------\n\n      if (questionsAnswered.includes(this.state.currentQuestion)) {\n        this.setState({\n          questionCounter: this.state.questionCounter + 1\n        });\n      } //------------------------------------------------------\n\n\n      console.log(\"Submitting \" + questionName);\n    };\n\n    this.state = {\n      currentQuestion: \"q1\",\n      showInfoState: false,\n      questionCounter: 0,\n      progress: null\n    };\n  }\n\n  render() {\n    const {\n      currentQuestion\n    } = this.state;\n    const progressBarStylePercent = this.state.progress * 100;\n    const progressBarPercentRounded = Math.round(progressBarStylePercent);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Form v3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Question \", currentQuestion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), this.state.currentQuestion === \"q1\" && /*#__PURE__*/_jsxDEV(Question1, {\n            initialvalue: answers[\"q1\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q1a\" && /*#__PURE__*/_jsxDEV(Question1a, {\n            initialvalue: answers[\"q1a\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q2\" && /*#__PURE__*/_jsxDEV(Question2, {\n            initialvalue: answers[\"q2\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"last-question-btn\",\n            onClick: this.onBackButton,\n            disabled: answers.length === 0,\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"info-btn\",\n            onClick: this.onInfoButton,\n            children: \"More Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-stuff\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                style: {\n                  width: progressBarStylePercent + '%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar-label\",\n              children: `${progressBarPercentRounded}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), this.state.showInfoState && /*#__PURE__*/_jsxDEV(Infotest, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FormV3;","map":{"version":3,"sources":["C:/Users/sawye/Coding/ReactProj/login-page/src/components/FormV3.js"],"names":["React","Component","Link","Question1","Question1a","Question2","Infotest","questionsAnswered","answers","FormV3","constructor","props","progressBar","numQuestions","length","progress","state","questionCounter","setState","onBackButton","event","preventDefault","onInfoButton","showInfoState","getQuestions","questions","push","onQuestionSubmit","questionName","questionAnswer","currentQIndex","indexOf","nextQIndex","console","log","includes","currentQuestion","render","progressBarStylePercent","progressBarPercentRounded","Math","round","onSubmit","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Question1 from './Questions/Question1';\r\nimport Question1a from './Questions/Question1a';\r\nimport Question2 from './Questions/Question2';\r\nimport Infotest from './Info/Infotest';\r\n\r\nconst questionsAnswered = [\r\n    \"q1\",\r\n    \"q2\",\r\n]\r\n\r\nconst answers = {\r\n\r\n};\r\n\r\n\r\nclass FormV3 extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            currentQuestion: \"q1\",\r\n            showInfoState: false,\r\n            questionCounter: 0,\r\n            progress: null,\r\n        };\r\n    }\r\n    \r\n    progressBar = () => {\r\n        const numQuestions = questionsAnswered.length;\r\n        const progress = (this.state.questionCounter / numQuestions);\r\n        this.setState({\r\n            progress: progress\r\n        })\r\n    }\r\n\r\n    onBackButton = (event) => {\r\n        event.preventDefault();\r\n        \r\n\r\n    }\r\n\r\n    onInfoButton = (event) =>{\r\n        event.preventDefault();\r\n        if(this.state.showInfoState === false){\r\n            this.setState({\r\n                showInfoState: true\r\n            })\r\n        }\r\n\r\n        if(this.state.showInfoState === true){\r\n            this.setState({\r\n                showInfoState: false\r\n            })\r\n        }\r\n    }\r\n\r\n    getQuestions = () => {\r\n        const questions = [\"q1\"];\r\n\r\n        if(answers[\"q1\"] === \"YES\"){\r\n            questions.push(\"q1a\")\r\n        }\r\n\r\n        questions.push(\"q2\");\r\n        questions.push(\"q3\");\r\n\r\n        return questions;\r\n    }\r\n\r\n    onQuestionSubmit = (questionName, questionAnswer) => {\r\n        answers[questionName] = questionAnswer;\r\n\r\n        // get question list\r\n        const questions = getQuestions;\r\n    \r\n        // find the current question in list\r\n        const currentQIndex = questions.indexOf(questionName);\r\n    \r\n        // find the next question in the list\r\n        const nextQIndex = currentQIndex + 1;\r\n        \r\n        console.log(questions);\r\n\r\n        //------------PROGRESS BAR STUFF--------------------------\r\n        \r\n        if(questionsAnswered.includes(this.state.currentQuestion)){\r\n            this.setState({\r\n                questionCounter: this.state.questionCounter+1\r\n            })\r\n        }\r\n        //------------------------------------------------------\r\n        \r\n        console.log(\"Submitting \" + questionName);\r\n\r\n    }\r\n   \r\n    render() {\r\n       \r\n        const {currentQuestion} = this.state;\r\n        \r\n        const progressBarStylePercent = this.state.progress * 100;\r\n        const progressBarPercentRounded = Math.round(progressBarStylePercent);\r\n\r\n        return (\r\n            <div>\r\n                \r\n                <div>\r\n                    <h1>Form v3</h1>\r\n                </div>\r\n\r\n                <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    \r\n                    <h5>Question {currentQuestion}</h5>\r\n\r\n                    {this.state.currentQuestion === \"q1\" && (\r\n                        <Question1 initialvalue={answers[\"q1\"]} onSubmit={this.onQuestionSubmit}></Question1>\r\n                    )}\r\n                    \r\n                    \r\n                    {this.state.currentQuestion === \"q1a\" && (\r\n                        <Question1a initialvalue={answers[\"q1a\"]} onSubmit={this.onQuestionSubmit}></Question1a>\r\n                    )}\r\n\r\n                    {this.state.currentQuestion === \"q2\" && (\r\n                        <Question2 initialvalue={answers[\"q2\"]} onSubmit={this.onQuestionSubmit}></Question2>\r\n                    )}\r\n\r\n                    <button type=\"button\" className=\"last-question-btn\" onClick={this.onBackButton} disabled={answers.length === 0}>Go Back</button>\r\n                    <button type=\"button\" className=\"info-btn\" onClick={this.onInfoButton}>More Info</button>\r\n                    <div className=\"progress-bar-stuff\">\r\n                        <div className=\"progress-bar-container\">\r\n                            <div className=\"progress-bar\" style={{width: progressBarStylePercent + '%'}}>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"progress-bar-label\">{`${progressBarPercentRounded}%`}</div>  \r\n                    </div>\r\n                </form>\r\n                {this.state.showInfoState && (\r\n                        <Infotest></Infotest>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormV3"]},"metadata":{},"sourceType":"module"}