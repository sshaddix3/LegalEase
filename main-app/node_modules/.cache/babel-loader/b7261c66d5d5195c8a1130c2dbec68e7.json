{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\FreeBirdProj\\\\main-app\\\\src\\\\components\\\\ClientListAttempt2.js\";\nimport React, { Component } from 'react';\nimport ClientListShow from './ClientListShow';\nimport ClientListRow from './ClientListRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet addClientFields = {\n  \"nameField\": \"\",\n  \"addressField\": \"\"\n};\nlet tempArray = [];\nlet test2d = [];\nlet new2dArray = [];\nlet temp1darray = [];\n\nclass ClientListAttempt2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sort2dArr = (a, b) => {\n      if (a[0] === b[0]) {\n        return 0;\n      } else {\n        return a[0] < b[0] ? -1 : 1;\n      }\n    };\n\n    this.insertInfo = (event, inputType) => {\n      test2d.push(tempArray);\n    };\n\n    this.handleNameInput = event => {\n      tempArray[0] = event.target.value;\n    };\n\n    this.handleAddressInput = event => {\n      tempArray[1] = event.target.value;\n    };\n\n    this.handleCityInput = event => {\n      tempArray[2] = event.target.value;\n    };\n\n    this.handleTelephoneInput = event => {\n      tempArray[3] = event.target.value;\n    };\n\n    this.handleEmailInput = event => {\n      tempArray[4] = event.target.value;\n    };\n\n    this.handleNewClientBtnPress = event => {\n      event.preventDefault();\n      test2d.push(tempArray.slice()); // const updateClientToDB = {\n      //     userID: this.props.user.id,\n      //     userName: this.props.user.name,\n      //     clientNum: this.state.counter,\n      //     clientName: test2d[test2d.length-1][0]\n      // }\n      // console.log(updateClientToDB.clientName);\n      // fetch(\"http://localhost:3001/insertClientToDB\", {\n      //     method: \"POST\",\n      //     headers: {\n      //         \"Content-Type\": \"application/json\"\n      //     },\n      //     credentials: \"include\",\n      //     body: JSON.stringify(updateClientToDB) \n      // }).then((res) => {\n      //     return res.json();\n      // }).then((parsedResponse) => {\n      //     console.log(parsedResponse);\n      // })\n\n      console.log(test2d);\n      test2d.sort(this.sort2dArr);\n      this.setState({\n        counter: this.state.counter + 1\n      });\n      document.getElementById('addclient-name-input').value = '';\n      document.getElementById('addclient-address-input').value = '';\n      document.getElementById('addclient-city-input').value = '';\n      document.getElementById('addclient-phone-input').value = '';\n      document.getElementById('addclient-email-input').value = '';\n\n      for (let j = 0; j < tempArray.length; j++) {\n        tempArray[j] = \"\";\n      }\n\n      this.forceUpdate();\n    };\n\n    this.showAddClient = event => {\n      if (this.state.showAddClient) {\n        this.setState({\n          showAddClient: false\n        });\n      } else {\n        this.setState({\n          showAddClient: true\n        });\n      }\n    };\n\n    this.helperFunction = helperVariable => {\n      let twodtopush;\n      let displayArr1 = [];\n      let displayArr2 = [];\n      let row;\n\n      if (helperVariable == 0) {\n        twodtopush = test2d;\n        row = test2d.map(x => x);\n\n        for (let i = 0; i < row.length; i++) {\n          displayArr1.push( /*#__PURE__*/_jsxDEV(ClientListRow, {\n            test2d: twodtopush,\n            clientnum: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 34\n          }, this));\n        }\n\n        return displayArr1;\n      }\n\n      if (helperVariable == 1) {\n        twodtopush = new2dArray;\n        row = new2dArray.map(x => x);\n\n        for (let i = 0; i < row.length; i++) {\n          displayArr2.push( /*#__PURE__*/_jsxDEV(ClientListRow, {\n            test2d: twodtopush,\n            clientnum: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 34\n          }, this));\n        }\n\n        return displayArr2;\n      }\n    };\n\n    this.search2d = event => {\n      //Force everything to be standardized no capital letters or all beginning with capital letters\n      if (event.target.value != \"\") {\n        this.setState({\n          helperStateVar: 1\n        });\n      } else {\n        this.setState({\n          helperStateVar: 0\n        });\n      }\n\n      let arr = test2d.map(x => x);\n      let input = event.target.value;\n      let helperArray = [];\n\n      for (var z = 0; z < arr.length; z++) {\n        for (let f = 0; f < arr[z].length; f++) {\n          if (arr[z][f].includes(input)) {\n            console.log(`${arr[z][f]} -- ${z} -- ${f}`);\n\n            if (!helperArray.includes(arr[z])) {\n              helperArray.push(arr[z]);\n            } else {\n              continue;\n            }\n          }\n        } // if (arr[z].indexOf(input) !== -1) {\n        //     //Found\n        //     console.log(`${arr[z][arr[z].indexOf(input)]} -- ${z} -- ${arr[z].indexOf(input)}`);\n        //     break;\n        // }\n\n      }\n\n      new2dArray = helperArray;\n      console.log(new2dArray);\n    };\n\n    this.buttonHelperFunction = () => {\n      let displayArr = [];\n      let row = test2d.map(x => x);\n\n      for (let i = 0; i < row.length; i++) {\n        displayArr.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btns\",\n          onClick: () => this.deleteButtons(i),\n          children: \"delete\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this));\n      }\n\n      return displayArr;\n    };\n\n    this.deleteButtons = (i, event) => {\n      test2d.splice(i, 1);\n      console.log(`Delete${i}`);\n      console.log(test2d);\n      this.forceUpdate();\n    };\n\n    this.state = {\n      counter: 0,\n      counter2: 0,\n      showAddClient: false,\n      helperStateVar: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showAddClient,\n        className: \"add-new-client-menu-btn\",\n        children: \"Add New Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-client-list-input\",\n        onInput: this.search2d\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), this.state.showAddClient && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"addclient-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-name-input\",\n            onInput: this.handleNameInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-address-input\",\n            onChange: this.handleAddressInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-city-input\",\n            onChange: this.handleCityInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Telephone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-phone-input\",\n            onChange: this.handleTelephoneInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-email-input\",\n            onChange: this.handleEmailInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleNewClientBtnPress,\n            type: \"submit\",\n            className: \"insert-client-btn\",\n            children: \"click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-database-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui-database-row-container\",\n          children: [this.state.helperStateVar == 0 && this.helperFunction(0), this.state.helperStateVar == 1 && this.helperFunction(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui-database-delete-container\",\n          children: this.buttonHelperFunction()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ClientListAttempt2;","map":{"version":3,"sources":["C:/Users/sawye/Coding/FreeBirdProj/main-app/src/components/ClientListAttempt2.js"],"names":["React","Component","ClientListShow","ClientListRow","addClientFields","tempArray","test2d","new2dArray","temp1darray","ClientListAttempt2","constructor","props","sort2dArr","a","b","insertInfo","event","inputType","push","handleNameInput","target","value","handleAddressInput","handleCityInput","handleTelephoneInput","handleEmailInput","handleNewClientBtnPress","preventDefault","slice","console","log","sort","setState","counter","state","document","getElementById","j","length","forceUpdate","showAddClient","helperFunction","helperVariable","twodtopush","displayArr1","displayArr2","row","map","x","i","search2d","helperStateVar","arr","input","helperArray","z","f","includes","buttonHelperFunction","displayArr","deleteButtons","splice","counter2","render","handleOnBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ClientListShow from './ClientListShow';\r\nimport ClientListRow from './ClientListRow';\r\n\r\nlet addClientFields = {\r\n    \"nameField\": \"\",\r\n    \"addressField\": \"\",\r\n};\r\n\r\nlet tempArray = [];\r\n\r\nlet test2d = [\r\n\r\n];\r\n\r\nlet new2dArray = [];\r\n\r\nlet temp1darray = [];\r\n\r\nclass ClientListAttempt2 extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            counter: 0,\r\n            counter2: 0,\r\n            showAddClient: false,\r\n            helperStateVar: 0\r\n        }\r\n    }\r\n\r\n    sort2dArr = (a, b) => {\r\n        if (a[0] === b[0]) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return (a[0] < b[0]) ? -1 : 1;\r\n        }\r\n    }\r\n\r\n    insertInfo = (event, inputType) => {\r\n        test2d.push(tempArray);\r\n    }\r\n\r\n    handleNameInput = (event) => {\r\n        tempArray[0] = (event.target.value);\r\n    }\r\n    handleAddressInput = (event) => {\r\n        tempArray[1] = (event.target.value);\r\n    }\r\n    handleCityInput = (event) => {\r\n        tempArray[2] = (event.target.value);\r\n    }\r\n    handleTelephoneInput = (event) => {\r\n        tempArray[3] = (event.target.value);\r\n    }\r\n    handleEmailInput = (event) => {\r\n        tempArray[4] = (event.target.value);\r\n    }\r\n\r\n    handleNewClientBtnPress = (event) => {\r\n        event.preventDefault();\r\n        test2d.push(tempArray.slice());\r\n\r\n        // const updateClientToDB = {\r\n        //     userID: this.props.user.id,\r\n        //     userName: this.props.user.name,\r\n        //     clientNum: this.state.counter,\r\n        //     clientName: test2d[test2d.length-1][0]\r\n        // }\r\n        // console.log(updateClientToDB.clientName);\r\n\r\n        // fetch(\"http://localhost:3001/insertClientToDB\", {\r\n        //     method: \"POST\",\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\"\r\n        //     },\r\n        //     credentials: \"include\",\r\n        //     body: JSON.stringify(updateClientToDB) \r\n        // }).then((res) => {\r\n        //     return res.json();\r\n        // }).then((parsedResponse) => {\r\n        //     console.log(parsedResponse);\r\n        // })\r\n\r\n        console.log(test2d);\r\n        test2d.sort(this.sort2dArr);\r\n        this.setState({\r\n            counter: this.state.counter + 1\r\n        })\r\n\r\n        document.getElementById('addclient-name-input').value = '';\r\n        document.getElementById('addclient-address-input').value = '';\r\n        document.getElementById('addclient-city-input').value = '';\r\n        document.getElementById('addclient-phone-input').value = '';\r\n        document.getElementById('addclient-email-input').value = '';\r\n        for (let j = 0; j < tempArray.length; j++) {\r\n            tempArray[j] = \"\";\r\n        }\r\n        this.forceUpdate();\r\n\r\n    }\r\n\r\n    showAddClient = (event) => {\r\n\r\n        if (this.state.showAddClient) {\r\n            this.setState({\r\n                showAddClient: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                showAddClient: true\r\n            })\r\n        }\r\n    }\r\n\r\n    helperFunction = (helperVariable) => {\r\n        let twodtopush;\r\n        let displayArr1 = [];\r\n        let displayArr2 = [];\r\n        let row;\r\n        if (helperVariable == 0) {\r\n            twodtopush = test2d;\r\n            row = test2d.map((x) => x);\r\n            for (let i = 0; i < row.length; i++) {\r\n                displayArr1.push(<ClientListRow key={i} test2d={twodtopush} clientnum={i} />)\r\n            }\r\n            return displayArr1;\r\n        }\r\n\r\n        if (helperVariable == 1) {\r\n            twodtopush = new2dArray;\r\n            row = new2dArray.map((x) => x);\r\n            for (let i = 0; i < row.length; i++) {\r\n                displayArr2.push(<ClientListRow key={i} test2d={twodtopush} clientnum={i} />)\r\n            }\r\n            return displayArr2;\r\n        }\r\n    }\r\n\r\n    search2d = (event) => {\r\n        //Force everything to be standardized no capital letters or all beginning with capital letters\r\n        if (event.target.value != \"\") {\r\n            this.setState({\r\n                helperStateVar: 1\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                helperStateVar: 0\r\n            })\r\n        }\r\n\r\n        let arr = test2d.map((x) => x);\r\n        let input = event.target.value;\r\n        let helperArray = [];\r\n\r\n        for (var z = 0; z < arr.length; z++) {\r\n            for (let f = 0; f < arr[z].length; f++) {\r\n                if (arr[z][f].includes(input)) {\r\n                    console.log(`${arr[z][f]} -- ${z} -- ${f}`);\r\n                    if(!(helperArray.includes(arr[z]))){\r\n                        helperArray.push(arr[z]);\r\n                    }\r\n                    else{\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            // if (arr[z].indexOf(input) !== -1) {\r\n            //     //Found\r\n            //     console.log(`${arr[z][arr[z].indexOf(input)]} -- ${z} -- ${arr[z].indexOf(input)}`);\r\n            //     break;\r\n            // }\r\n        }\r\n        new2dArray = helperArray;\r\n        console.log(new2dArray);\r\n\r\n\r\n    }\r\n\r\n    buttonHelperFunction = () => {\r\n        let displayArr = [];\r\n        let row = test2d.map((x) => x);\r\n        for (let i = 0; i < row.length; i++) {\r\n            displayArr.push(<button key={i} className=\"delete-btns\" onClick={() => this.deleteButtons(i)}>delete</button>)\r\n        }\r\n        return displayArr;\r\n    }\r\n\r\n    deleteButtons = (i, event) => {\r\n        test2d.splice(i, 1);\r\n        console.log(`Delete${i}`);\r\n        console.log(test2d);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.showAddClient} className=\"add-new-client-menu-btn\">Add New Client</button>\r\n                <input type=\"text\" className=\"search-client-list-input\" onInput={this.search2d}></input>\r\n\r\n                {(this.state.showAddClient &&\r\n                    <form className=\"addclient-container\">\r\n                        <div className=\"label-input-container\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-name-input\" onInput={this.handleNameInput} onBlur={this.handleOnBlur}></input>\r\n                        </div>\r\n                        <div className=\"label-input-container\">\r\n                            <label>Street Address</label>\r\n                            <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-address-input\" onChange={this.handleAddressInput} onBlur={this.handleOnBlur}></input>\r\n                        </div>\r\n                        <div className=\"label-input-container\">\r\n                            <label>City</label>\r\n                            <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-city-input\" onChange={this.handleCityInput} onBlur={this.handleOnBlur}></input>\r\n                        </div>\r\n                        <div className=\"label-input-container\">\r\n                            <label>Telephone Number</label>\r\n                            <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-phone-input\" onChange={this.handleTelephoneInput} onBlur={this.handleOnBlur}></input>\r\n                        </div>\r\n                        <div className=\"label-input-container\">\r\n                            <label>Email Address</label>\r\n                            <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-email-input\" onChange={this.handleEmailInput} onBlur={this.handleOnBlur}></input>\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={this.handleNewClientBtnPress} type=\"submit\" className=\"insert-client-btn\">click</button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n                <div className=\"ui-database-container\">\r\n                    <div className=\"ui-database-row-container\">\r\n                        {(this.state.helperStateVar == 0 &&\r\n                            this.helperFunction(0)\r\n                        )}\r\n                        {(this.state.helperStateVar == 1 &&\r\n                            this.helperFunction(1)\r\n                        )}\r\n                    </div>\r\n                    <div className=\"ui-database-delete-container\">\r\n                        {this.buttonHelperFunction()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientListAttempt2"]},"metadata":{},"sourceType":"module"}