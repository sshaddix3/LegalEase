{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\FreeBirdProj\\\\main-app\\\\src\\\\components\\\\ClientListAttempt2.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet addClientFields = {\n  \"nameField\": \"\",\n  \"addressField\": \"\"\n};\nlet inputFields = [];\nlet tempArray = [];\nlet test2d = [[\"Sawyer\", \"123\", \"Sherlock\"], [\"Mack\", \"543\", \"Arizone\"], [\"Ty\", \"785\", \"Wash\"], [\"Andrew\", \"243\", \"Franc\"]];\nlet temp1darray = [];\n\nclass ClientListAttempt2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sort2dArr = (a, b) => {\n      if (a[0] === b[0]) {\n        return 0;\n      } else {\n        return a[0] < b[0] ? -1 : 1;\n      }\n    };\n\n    this.handleOnBlur = event => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.insertInfo = (event, inputType, num) => {\n      let counter = test2d.length;\n      let arrayOfArrays = [];\n\n      switch (inputType) {\n        case \"name\":\n          tempArray[0] = event.target.value;\n          arrayOfArrays.push(tempArray);\n          break;\n\n        case \"address\":\n          tempArray[1] = event.target.value;\n          arrayOfArrays.push(tempArray);\n          break;\n\n        case \"city\":\n          tempArray[2] = event.target.value;\n          arrayOfArrays.push(tempArray);\n          break;\n\n        case \"telephone\":\n          tempArray[3] = event.target.value;\n          arrayOfArrays.push(tempArray);\n          break;\n\n        case \"email\":\n          tempArray[4] = event.target.value;\n          arrayOfArrays.push(tempArray);\n          break;\n\n        case \"map\":\n          tempArray.length = 0;\n          return arrayOfArrays[num];\n      }\n\n      console.log(arrayOfArrays);\n    };\n\n    this.deepCopy = arr => {\n      let copy = [];\n      arr.forEach(elem => {\n        if (Array.isArray(elem)) {\n          copy.push(this.deepCopy(elem));\n        } else {\n          if (typeof elem === 'object') {\n            copy.push(this.deepCopyObject(elem));\n          } else {\n            copy.push(elem);\n          }\n        }\n      });\n      return copy;\n    };\n\n    this.deepCopyObject = obj => {\n      let tempObj = {};\n\n      for (let [key, value] of Object.entries(obj)) {\n        if (Array.isArray(value)) {\n          tempObj[key] = this.deepCopy(value);\n        } else {\n          if (typeof value === 'object') {\n            tempObj[key] = this.deepCopyObject(value);\n          } else {\n            tempObj[key] = value;\n          }\n        }\n      }\n\n      return tempObj;\n    };\n\n    this.handleNameInput = event => {\n      let name = \"name\";\n      this.insertInfo(event, name);\n    };\n\n    this.handleAddressInput = event => {\n      let address = \"address\";\n      this.insertInfo(event, address);\n    };\n\n    this.handleCityInput = event => {\n      let city = \"city\";\n      this.insertInfo(event, city);\n    };\n\n    this.handleTelephoneInput = event => {\n      let telephone = \"telephone\";\n      this.insertInfo(event, telephone);\n    };\n\n    this.handleEmailInput = event => {\n      let email = \"email\";\n      this.insertInfo(event, email);\n    };\n\n    this.handleNewClientBtnPress = event => {\n      // temp1darray.push(addClientFields[\"addressField\"]);\n      let newArr = this.deepCopy(test2d);\n      console.log(newArr);\n      let num = newArr.length;\n      let map = \"map\";\n      let tempArray = this.insertInfo(event, map, num);\n      newArr.push(tempArray);\n      newArr.sort(this.sort2dArr); //SUCCESSFUL sorting of 2d array\n\n      console.log(newArr);\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.state = {\n      counter: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addclient-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-name-input\",\n            onInput: this.handleNameInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-address-input\",\n            onChange: this.handleAddressInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-city-input\",\n            onChange: this.handleCityInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Telephone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-phone-input\",\n            onChange: this.handleTelephoneInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-email-input\",\n            onChange: this.handleEmailInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleNewClientBtnPress,\n            children: \"click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-database-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui-database-row-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ClientListAttempt2;","map":{"version":3,"sources":["C:/Users/sawye/Coding/FreeBirdProj/main-app/src/components/ClientListAttempt2.js"],"names":["React","Component","addClientFields","inputFields","tempArray","test2d","temp1darray","ClientListAttempt2","constructor","props","sort2dArr","a","b","handleOnBlur","event","setState","counter","state","insertInfo","inputType","num","length","arrayOfArrays","target","value","push","console","log","deepCopy","arr","copy","forEach","elem","Array","isArray","deepCopyObject","obj","tempObj","key","Object","entries","handleNameInput","name","handleAddressInput","address","handleCityInput","city","handleTelephoneInput","telephone","handleEmailInput","email","handleNewClientBtnPress","newArr","map","sort","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAIC,eAAe,GAAG;AAClB,eAAa,EADK;AAElB,kBAAgB;AAFE,CAAtB;AAKA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,SAAS,GAAG,EAAhB;AAEA,IAAIC,MAAM,GAAG,CACT,CAAC,QAAD,EAAW,KAAX,EAAkB,UAAlB,CADS,EAET,CAAC,MAAD,EAAS,KAAT,EAAgB,SAAhB,CAFS,EAGT,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CAHS,EAIT,CAAC,QAAD,EAAW,KAAX,EAAkB,OAAlB,CAJS,CAAb;AAOA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AACvCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,SARmB,GAQP,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,UAAID,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAAd,EAAmB;AACf,eAAO,CAAP;AACH,OAFD,MAGK;AACD,eAAQD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAT,GAAgB,CAAC,CAAjB,GAAqB,CAA5B;AACH;AACJ,KAfkB;;AAAA,SAiBnBC,YAjBmB,GAiBHC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,GAAqB;AADpB,OAAd;AAGH,KArBkB;;AAAA,SAwBnBE,UAxBmB,GAwBN,CAACJ,KAAD,EAAQK,SAAR,EAAmBC,GAAnB,KAA2B;AAEpC,UAAIJ,OAAO,GAAGX,MAAM,CAACgB,MAArB;AACA,UAAIC,aAAa,GAAG,EAApB;;AAEA,cAAOH,SAAP;AACI,aAAK,MAAL;AACIf,UAAAA,SAAS,CAAC,CAAD,CAAT,GAAgBU,KAAK,CAACS,MAAN,CAAaC,KAA7B;AACAF,UAAAA,aAAa,CAACG,IAAd,CAAmBrB,SAAnB;AACA;;AACJ,aAAK,SAAL;AACIA,UAAAA,SAAS,CAAC,CAAD,CAAT,GAAgBU,KAAK,CAACS,MAAN,CAAaC,KAA7B;AACAF,UAAAA,aAAa,CAACG,IAAd,CAAmBrB,SAAnB;AACA;;AACJ,aAAK,MAAL;AACIA,UAAAA,SAAS,CAAC,CAAD,CAAT,GAAgBU,KAAK,CAACS,MAAN,CAAaC,KAA7B;AACAF,UAAAA,aAAa,CAACG,IAAd,CAAmBrB,SAAnB;AACA;;AACJ,aAAK,WAAL;AACIA,UAAAA,SAAS,CAAC,CAAD,CAAT,GAAgBU,KAAK,CAACS,MAAN,CAAaC,KAA7B;AACAF,UAAAA,aAAa,CAACG,IAAd,CAAmBrB,SAAnB;AACA;;AACJ,aAAK,OAAL;AACIA,UAAAA,SAAS,CAAC,CAAD,CAAT,GAAgBU,KAAK,CAACS,MAAN,CAAaC,KAA7B;AACAF,UAAAA,aAAa,CAACG,IAAd,CAAmBrB,SAAnB;AACA;;AACJ,aAAK,KAAL;AACIA,UAAAA,SAAS,CAACiB,MAAV,GAAmB,CAAnB;AACA,iBAAQC,aAAa,CAACF,GAAD,CAArB;AAvBR;;AAyBAM,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACH,KAvDkB;;AAAA,SAyDnBM,QAzDmB,GAyDPC,GAAD,IAAS;AAChB,UAAIC,IAAI,GAAG,EAAX;AACAD,MAAAA,GAAG,CAACE,OAAJ,CAAYC,IAAI,IAAI;AAClB,YAAGC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAH,EAAuB;AACrBF,UAAAA,IAAI,CAACL,IAAL,CAAU,KAAKG,QAAL,CAAcI,IAAd,CAAV;AACD,SAFD,MAEK;AACH,cAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BF,YAAAA,IAAI,CAACL,IAAL,CAAU,KAAKU,cAAL,CAAoBH,IAApB,CAAV;AACH,WAFC,MAEK;AACHF,YAAAA,IAAI,CAACL,IAAL,CAAUO,IAAV;AACD;AACF;AACF,OAVD;AAWA,aAAOF,IAAP;AACD,KAvEgB;;AAAA,SAyEnBK,cAzEmB,GAyEDC,GAAD,IAAS;AACtB,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAI,CAACC,GAAD,EAAMd,KAAN,CAAT,IAAyBe,MAAM,CAACC,OAAP,CAAeJ,GAAf,CAAzB,EAA8C;AAC5C,YAAIH,KAAK,CAACC,OAAN,CAAcV,KAAd,CAAJ,EAA0B;AACxBa,UAAAA,OAAO,CAACC,GAAD,CAAP,GAAe,KAAKV,QAAL,CAAcJ,KAAd,CAAf;AACD,SAFD,MAEO;AACL,cAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7Ba,YAAAA,OAAO,CAACC,GAAD,CAAP,GAAe,KAAKH,cAAL,CAAoBX,KAApB,CAAf;AACD,WAFD,MAEO;AACLa,YAAAA,OAAO,CAACC,GAAD,CAAP,GAAed,KAAf;AACD;AACF;AACF;;AACD,aAAOa,OAAP;AACD,KAvFgB;;AAAA,SAyFnBI,eAzFmB,GAyFA3B,KAAD,IAAW;AACzB,UAAI4B,IAAI,GAAG,MAAX;AACA,WAAKxB,UAAL,CAAgBJ,KAAhB,EAAuB4B,IAAvB;AACH,KA5FkB;;AAAA,SA6FnBC,kBA7FmB,GA6FG7B,KAAD,IAAW;AAC5B,UAAI8B,OAAO,GAAG,SAAd;AACA,WAAK1B,UAAL,CAAgBJ,KAAhB,EAAuB8B,OAAvB;AACH,KAhGkB;;AAAA,SAiGnBC,eAjGmB,GAiGA/B,KAAD,IAAW;AACzB,UAAIgC,IAAI,GAAG,MAAX;AACA,WAAK5B,UAAL,CAAgBJ,KAAhB,EAAuBgC,IAAvB;AACH,KApGkB;;AAAA,SAqGnBC,oBArGmB,GAqGKjC,KAAD,IAAW;AAC9B,UAAIkC,SAAS,GAAG,WAAhB;AACA,WAAK9B,UAAL,CAAgBJ,KAAhB,EAAuBkC,SAAvB;AACH,KAxGkB;;AAAA,SAyGnBC,gBAzGmB,GAyGCnC,KAAD,IAAW;AAC1B,UAAIoC,KAAK,GAAG,OAAZ;AACA,WAAKhC,UAAL,CAAgBJ,KAAhB,EAAuBoC,KAAvB;AACH,KA5GkB;;AAAA,SA8GnBC,uBA9GmB,GA8GQrC,KAAD,IAAW;AACjC;AACA,UAAIsC,MAAM,GAAG,KAAKxB,QAAL,CAAcvB,MAAd,CAAb;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYyB,MAAZ;AACA,UAAIhC,GAAG,GAAGgC,MAAM,CAAC/B,MAAjB;AACA,UAAIgC,GAAG,GAAG,KAAV;AACA,UAAIjD,SAAS,GAAG,KAAKc,UAAL,CAAgBJ,KAAhB,EAAuBuC,GAAvB,EAA4BjC,GAA5B,CAAhB;AACAgC,MAAAA,MAAM,CAAC3B,IAAP,CAAYrB,SAAZ;AACAgD,MAAAA,MAAM,CAACE,IAAP,CAAY,KAAK5C,SAAjB,EARiC,CASjC;;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYyB,MAAZ;AAEA,WAAKrC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,GAAqB;AADpB,OAAd;AAGH,KA7HkB;;AAGf,SAAKC,KAAL,GAAa;AACRD,MAAAA,OAAO,EAAE;AADD,KAAb;AAGH;;AAyHDuC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,wBAA7B;AAAsD,YAAA,EAAE,EAAC,sBAAzD;AAAgF,YAAA,OAAO,EAAI,KAAKd,eAAhG;AAAiH,YAAA,MAAM,EAAG,KAAK5B;AAA/H;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADZ,eAEY;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,wBAA7B;AAAsD,YAAA,EAAE,EAAC,yBAAzD;AAAmF,YAAA,QAAQ,EAAI,KAAK8B,kBAApG;AAAwH,YAAA,MAAM,EAAG,KAAK9B;AAAtI;AAAA;AAAA;AAAA;AAAA,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASY;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,wBAA7B;AAAsD,YAAA,EAAE,EAAC,sBAAzD;AAAgF,YAAA,QAAQ,EAAI,KAAKgC,eAAjG;AAAkH,YAAA,MAAM,EAAG,KAAKhC;AAAhI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATZ,eAaY;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,wBAA7B;AAAsD,YAAA,EAAE,EAAC,uBAAzD;AAAiF,YAAA,QAAQ,EAAI,KAAKkC,oBAAlG;AAAwH,YAAA,MAAM,EAAG,KAAKlC;AAAtI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbZ,eAiBY;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,wBAA7B;AAAsD,YAAA,EAAE,EAAC,uBAAzD;AAAiF,YAAA,QAAQ,EAAI,KAAKoC,gBAAlG;AAAoH,YAAA,MAAM,EAAG,KAAKpC;AAAlI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBZ,eAqBI;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAI,KAAKsC,uBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA0BI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkCH;;AAnKsC;;AAsK3C,eAAe5C,kBAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nlet addClientFields = {\r\n    \"nameField\": \"\",\r\n    \"addressField\": \"\",\r\n};\r\n\r\nlet inputFields = [];\r\nlet tempArray = [];\r\n\r\nlet test2d = [\r\n    [\"Sawyer\", \"123\", \"Sherlock\"],\r\n    [\"Mack\", \"543\", \"Arizone\"],\r\n    [\"Ty\", \"785\", \"Wash\"],\r\n    [\"Andrew\", \"243\", \"Franc\"]\r\n];\r\n\r\nlet temp1darray = [];\r\n\r\nclass ClientListAttempt2 extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             counter: 0\r\n        }\r\n    }\r\n\r\n    sort2dArr = (a, b) => {\r\n        if (a[0] === b[0]) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return (a[0] < b[0]) ? -1 : 1;\r\n        }\r\n    }\r\n\r\n    handleOnBlur = (event) => {\r\n        this.setState({\r\n            counter: this.state.counter + 1\r\n        })\r\n    }\r\n\r\n\r\n    insertInfo = (event, inputType, num) => {\r\n\r\n        let counter = test2d.length;\r\n        let arrayOfArrays = [];\r\n\r\n        switch(inputType){\r\n            case \"name\":\r\n                tempArray[0] = (event.target.value);\r\n                arrayOfArrays.push(tempArray);\r\n                break;\r\n            case \"address\":\r\n                tempArray[1] = (event.target.value);\r\n                arrayOfArrays.push(tempArray);\r\n                break;\r\n            case \"city\":\r\n                tempArray[2] = (event.target.value);\r\n                arrayOfArrays.push(tempArray);\r\n                break;\r\n            case \"telephone\":\r\n                tempArray[3] = (event.target.value);\r\n                arrayOfArrays.push(tempArray);\r\n                break;\r\n            case \"email\":\r\n                tempArray[4] = (event.target.value);\r\n                arrayOfArrays.push(tempArray);\r\n                break;\r\n            case \"map\":\r\n                tempArray.length = 0;\r\n                return (arrayOfArrays[num]);\r\n        }\r\n        console.log(arrayOfArrays);\r\n    }\r\n\r\n    deepCopy = (arr) => {\r\n        let copy = [];\r\n        arr.forEach(elem => {\r\n          if(Array.isArray(elem)){\r\n            copy.push(this.deepCopy(elem))\r\n          }else{\r\n            if (typeof elem === 'object') {\r\n              copy.push(this.deepCopyObject(elem))\r\n          } else {\r\n              copy.push(elem)\r\n            }\r\n          }\r\n        })\r\n        return copy;\r\n      }\r\n      // Helper function to deal with Objects\r\n    deepCopyObject = (obj) => {\r\n        let tempObj = {};\r\n        for (let [key, value] of Object.entries(obj)) {\r\n          if (Array.isArray(value)) {\r\n            tempObj[key] = this.deepCopy(value);\r\n          } else {\r\n            if (typeof value === 'object') {\r\n              tempObj[key] = this.deepCopyObject(value);\r\n            } else {\r\n              tempObj[key] = value\r\n            }\r\n          }\r\n        }\r\n        return tempObj;\r\n      }\r\n\r\n    handleNameInput = (event) => {\r\n        let name = \"name\";\r\n        this.insertInfo(event, name);\r\n    }\r\n    handleAddressInput = (event) => {\r\n        let address = \"address\";\r\n        this.insertInfo(event, address);\r\n    }\r\n    handleCityInput = (event) => {\r\n        let city = \"city\";\r\n        this.insertInfo(event, city);\r\n    }\r\n    handleTelephoneInput = (event) => {\r\n        let telephone = \"telephone\";\r\n        this.insertInfo(event, telephone);\r\n    }\r\n    handleEmailInput = (event) => {\r\n        let email = \"email\";\r\n        this.insertInfo(event, email);\r\n    }\r\n\r\n    handleNewClientBtnPress = (event) => {\r\n        // temp1darray.push(addClientFields[\"addressField\"]);\r\n        let newArr = this.deepCopy(test2d);\r\n        console.log(newArr);\r\n        let num = newArr.length;\r\n        let map = \"map\"\r\n        let tempArray = this.insertInfo(event, map, num)\r\n        newArr.push(tempArray);\r\n        newArr.sort(this.sort2dArr);\r\n        //SUCCESSFUL sorting of 2d array\r\n        console.log(newArr);\r\n\r\n        this.setState({\r\n            counter: this.state.counter + 1,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"addclient-container\">\r\n                    <div className=\"label-input-container\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-name-input\" onInput = {this.handleNameInput} onBlur= {this.handleOnBlur}></input>\r\n                    </div>\r\n                    <div className=\"label-input-container\">\r\n                                <label>Street Address</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-address-input\" onChange = {this.handleAddressInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>City</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-city-input\" onChange = {this.handleCityInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>Telephone Number</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-phone-input\" onChange = {this.handleTelephoneInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>Email Address</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-email-input\" onChange = {this.handleEmailInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                    <div>\r\n                        <button onClick = {this.handleNewClientBtnPress}>click</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ui-database-container\">\r\n                    <div className=\"ui-database-row-container\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientListAttempt2"]},"metadata":{},"sourceType":"module"}