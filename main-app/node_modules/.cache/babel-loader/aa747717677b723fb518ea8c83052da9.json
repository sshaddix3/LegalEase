{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\FreeBirdProj\\\\main-app\\\\src\\\\components\\\\ClientListAttempt2.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet addClientFields = {\n  \"nameField\": \"\",\n  \"addressField\": \"\"\n};\nlet test2d = [[\"Sawyer\", \"123\", \"Sherlock\"], [\"Mack\", \"543\", \"Arizone\"], [\"Ty\", \"785\", \"Wash\"], [\"Andrew\", \"243\", \"Franc\"]];\nlet temp1darray = [];\n\nclass ClientListAttempt2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sort2dArr = (a, b) => {\n      if (a[0] === b[0]) {\n        return 0;\n      } else {\n        return a[0] < b[0] ? -1 : 1;\n      }\n    };\n\n    this.handleOnBlur = event => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.insertInfo = (event, inputType) => {\n      let inputFields = [];\n\n      switch (inputType) {\n        case \"name\":\n          inputFields[0] = event.target.value;\n          break;\n\n        case \"address\":\n          inputFields[0] = event.target.value;\n          break;\n\n        case \"city\":\n          inputFields[0] = event.target.value;\n          break;\n\n        case \"telephone\":\n          inputFields[0] = event.target.value;\n          break;\n\n        case \"email\":\n          inputFields[0] = event.target.value;\n          break;\n\n        case \"map\":\n          return inputFields;\n      }\n    };\n\n    this.handleNameInput = event => {\n      let name = \"name\";\n      this.insertInfo(event, name);\n    };\n\n    this.handleAddressInput = event => {\n      let address = \"address\";\n      this.insertInfo(event, address);\n    };\n\n    this.handleCityInput = event => {\n      let city = \"city\";\n      this.insertInfo(event, city);\n    };\n\n    this.handleTelephoneInput = event => {\n      let telephone = \"telephone\";\n      this.insertInfo(event, telephone);\n    };\n\n    this.handleEmailInput = event => {\n      let email = \"email\";\n      this.insertInfo(event, email);\n    };\n\n    this.handleNewClientBtnPress = event => {\n      // temp1darray.push(addClientFields[\"addressField\"]);\n      let newArr = test2d.map(x => x);\n      let map = \"map\";\n      let tempArray = insertInfo(event, map);\n      newArr.push(tempArray);\n      newArr.sort(this.sort2dArr); //SUCCESSFUL sorting of 2d array\n\n      console.log(newArr);\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.state = {\n      counter: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addclient-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-name-input\",\n            onInput: this.handleNameInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-address-input\",\n            onChange: this.handleAddressInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-city-input\",\n            onChange: this.handleCityInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Telephone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-phone-input\",\n            onChange: this.handleTelephoneInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-email-input\",\n            onChange: this.handleEmailInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleNewClientBtnPress,\n            children: \"click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-database-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui-database-row-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ClientListAttempt2;","map":{"version":3,"sources":["C:/Users/sawye/Coding/FreeBirdProj/main-app/src/components/ClientListAttempt2.js"],"names":["React","Component","addClientFields","test2d","temp1darray","ClientListAttempt2","constructor","props","sort2dArr","a","b","handleOnBlur","event","setState","counter","state","insertInfo","inputType","inputFields","target","value","handleNameInput","name","handleAddressInput","address","handleCityInput","city","handleTelephoneInput","telephone","handleEmailInput","email","handleNewClientBtnPress","newArr","map","x","tempArray","push","sort","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nlet addClientFields = {\r\n    \"nameField\": \"\",\r\n    \"addressField\": \"\",\r\n};\r\n\r\nlet test2d = [\r\n    [\"Sawyer\", \"123\", \"Sherlock\"],\r\n    [\"Mack\", \"543\", \"Arizone\"],\r\n    [\"Ty\", \"785\", \"Wash\"],\r\n    [\"Andrew\", \"243\", \"Franc\"]\r\n];\r\n\r\nlet temp1darray = [];\r\n\r\nclass ClientListAttempt2 extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             counter: 0\r\n        }\r\n    }\r\n\r\n    sort2dArr = (a, b) => {\r\n        if (a[0] === b[0]) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return (a[0] < b[0]) ? -1 : 1;\r\n        }\r\n    }\r\n\r\n    handleOnBlur = (event) => {\r\n        this.setState({\r\n            counter: this.state.counter + 1\r\n        })\r\n    }\r\n\r\n    insertInfo = (event, inputType) => {\r\n        let inputFields = [];\r\n\r\n        switch(inputType){\r\n            case \"name\":\r\n                inputFields[0] = (event.target.value);\r\n                break;\r\n            case \"address\":\r\n                inputFields[0] = (event.target.value);\r\n                break;\r\n            case \"city\":\r\n                inputFields[0] = (event.target.value);\r\n                break;\r\n            case \"telephone\":\r\n                inputFields[0] = (event.target.value);\r\n                break;\r\n            case \"email\":\r\n                inputFields[0] = (event.target.value);\r\n                break;\r\n            case \"map\":\r\n                return (inputFields);\r\n        }\r\n    }\r\n\r\n    handleNameInput = (event) => {\r\n        let name = \"name\";\r\n        this.insertInfo(event, name);\r\n    }\r\n    handleAddressInput = (event) => {\r\n        let address = \"address\";\r\n        this.insertInfo(event, address);\r\n    }\r\n    handleCityInput = (event) => {\r\n        let city = \"city\";\r\n        this.insertInfo(event, city);\r\n    }\r\n    handleTelephoneInput = (event) => {\r\n        let telephone = \"telephone\";\r\n        this.insertInfo(event, telephone);\r\n    }\r\n    handleEmailInput = (event) => {\r\n        let email = \"email\";\r\n        this.insertInfo(event, email);\r\n    }\r\n\r\n    handleNewClientBtnPress = (event) => {\r\n        // temp1darray.push(addClientFields[\"addressField\"]);\r\n        let newArr = test2d.map(x => x);\r\n        let map = \"map\"\r\n        let tempArray = insertInfo(event, map)\r\n        newArr.push(tempArray);\r\n        newArr.sort(this.sort2dArr);\r\n        //SUCCESSFUL sorting of 2d array\r\n        console.log(newArr);\r\n\r\n        this.setState({\r\n            counter: this.state.counter + 1,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"addclient-container\">\r\n                    <div className=\"label-input-container\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-name-input\" onInput = {this.handleNameInput} onBlur= {this.handleOnBlur}></input>\r\n                    </div>\r\n                    <div className=\"label-input-container\">\r\n                                <label>Street Address</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-address-input\" onChange = {this.handleAddressInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>City</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-city-input\" onChange = {this.handleCityInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>Telephone Number</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-phone-input\" onChange = {this.handleTelephoneInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>Email Address</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-email-input\" onChange = {this.handleEmailInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                    <div>\r\n                        <button onClick = {this.handleNewClientBtnPress}>click</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ui-database-container\">\r\n                    <div className=\"ui-database-row-container\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientListAttempt2"]},"metadata":{},"sourceType":"module"}