{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\FreeBirdProj\\\\main-app\\\\src\\\\components\\\\ClientListAttempt2.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet addClientFields = {\n  \"nameField\": \"\",\n  \"addressField\": \"\"\n};\nlet inputFields = [];\nlet test2d = [[\"Sawyer\", \"123\", \"Sherlock\"], [\"Mack\", \"543\", \"Arizone\"], [\"Ty\", \"785\", \"Wash\"], [\"Andrew\", \"243\", \"Franc\"]];\nlet temp1darray = [];\n\nclass ClientListAttempt2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sort2dArr = (a, b) => {\n      if (a[0] === b[0]) {\n        return 0;\n      } else {\n        return a[0] < b[0] ? -1 : 1;\n      }\n    };\n\n    this.handleOnBlur = event => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.insertInfo = (event, inputType) => {\n      if (inputType == \"name\") {\n        inputFields[0] = event.target.value;\n      }\n\n      if (inputType == \"address\") {\n        inputFields[1] = event.target.value;\n      }\n\n      if (inputType == \"city\") {\n        inputFields[2] = event.target.value;\n      }\n\n      if (inputType == \"telephone\") {\n        inputFields[3] = event.target.value;\n      }\n\n      if (inputType == \"email\") {\n        inputFields[4] = event.target.value;\n      }\n    };\n\n    this.handleNameInput = event => {\n      let name = \"name\";\n      this.insertInfo(event, name);\n    };\n\n    this.handleAddressInput = event => {\n      let address = \"address\";\n      this.insertInfo(event, address);\n    };\n\n    this.handleCityInput = event => {\n      let city = \"city\";\n      this.insertInfo(event, city);\n    };\n\n    this.handleTelephoneInput = event => {\n      let telephone = \"telephone\";\n      this.insertInfo(event, telephone);\n    };\n\n    this.handleEmailInput = event => {\n      let email = \"email\";\n      this.insertInfo(event, email);\n    };\n\n    this.handleNewClientBtnPress = event => {\n      // temp1darray.push(addClientFields[\"addressField\"]);\n      test2d.push(inputFields);\n      test2d.sort(this.sort2dArr); //SUCCESSFUL sorting of 2d array\n\n      console.log(test2d);\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.state = {\n      counter: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addclient-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-name-input\",\n            onInput: this.handleNameInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-address-input\",\n            onChange: this.handleAddressInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-city-input\",\n            onChange: this.handleCityInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Telephone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-phone-input\",\n            onChange: this.handleTelephoneInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"addclient-input-fields\",\n            id: \"addclient-email-input\",\n            onChange: this.handleEmailInput,\n            onBlur: this.handleOnBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleNewClientBtnPress,\n            children: \"click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-database-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui-database-row-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ClientListAttempt2;","map":{"version":3,"sources":["C:/Users/sawye/Coding/FreeBirdProj/main-app/src/components/ClientListAttempt2.js"],"names":["React","Component","addClientFields","inputFields","test2d","temp1darray","ClientListAttempt2","constructor","props","sort2dArr","a","b","handleOnBlur","event","setState","counter","state","insertInfo","inputType","target","value","handleNameInput","name","handleAddressInput","address","handleCityInput","city","handleTelephoneInput","telephone","handleEmailInput","email","handleNewClientBtnPress","push","sort","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nlet addClientFields = {\r\n    \"nameField\": \"\",\r\n    \"addressField\": \"\",\r\n};\r\n\r\nlet inputFields = [];\r\n\r\n\r\nlet test2d = [\r\n    [\"Sawyer\", \"123\", \"Sherlock\"],\r\n    [\"Mack\", \"543\", \"Arizone\"],\r\n    [\"Ty\", \"785\", \"Wash\"],\r\n    [\"Andrew\", \"243\", \"Franc\"]\r\n];\r\n\r\nlet temp1darray = [];\r\n\r\nclass ClientListAttempt2 extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             counter: 0\r\n        }\r\n    }\r\n\r\n    sort2dArr = (a, b) => {\r\n        if (a[0] === b[0]) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return (a[0] < b[0]) ? -1 : 1;\r\n        }\r\n    }\r\n\r\n    handleOnBlur = (event) => {\r\n        this.setState({\r\n            counter: this.state.counter + 1\r\n        })\r\n    }\r\n\r\n    insertInfo = (event, inputType) => {\r\n        if(inputType == \"name\"){\r\n            inputFields[0] = (event.target.value);\r\n        }\r\n        if(inputType == \"address\"){\r\n            inputFields[1] = (event.target.value);\r\n        }\r\n        if(inputType == \"city\"){\r\n            inputFields[2] = (event.target.value);\r\n        }\r\n        if(inputType == \"telephone\"){\r\n            inputFields[3] = (event.target.value);\r\n        }\r\n        if(inputType == \"email\"){\r\n            inputFields[4] = (event.target.value);\r\n        }\r\n    }\r\n\r\n    handleNameInput = (event) => {\r\n        let name = \"name\";\r\n        this.insertInfo(event, name);\r\n    }\r\n    handleAddressInput = (event) => {\r\n        let address = \"address\";\r\n        this.insertInfo(event, address);\r\n    }\r\n    handleCityInput = (event) => {\r\n        let city = \"city\";\r\n        this.insertInfo(event, city);\r\n    }\r\n    handleTelephoneInput = (event) => {\r\n        let telephone = \"telephone\";\r\n        this.insertInfo(event, telephone);\r\n    }\r\n    handleEmailInput = (event) => {\r\n        let email = \"email\";\r\n        this.insertInfo(event, email);\r\n    }\r\n\r\n    handleNewClientBtnPress = (event) => {\r\n        // temp1darray.push(addClientFields[\"addressField\"]);\r\n        test2d.push(inputFields);\r\n        test2d.sort(this.sort2dArr);\r\n        //SUCCESSFUL sorting of 2d array\r\n        console.log(test2d);\r\n\r\n        this.setState({\r\n            counter: this.state.counter + 1,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"addclient-container\">\r\n                    <div className=\"label-input-container\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-name-input\" onInput = {this.handleNameInput} onBlur= {this.handleOnBlur}></input>\r\n                    </div>\r\n                    <div className=\"label-input-container\">\r\n                                <label>Street Address</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-address-input\" onChange = {this.handleAddressInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>City</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-city-input\" onChange = {this.handleCityInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>Telephone Number</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-phone-input\" onChange = {this.handleTelephoneInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                            <div className=\"label-input-container\">\r\n                                <label>Email Address</label>\r\n                                <input type=\"text\" className=\"addclient-input-fields\" id=\"addclient-email-input\" onChange = {this.handleEmailInput} onBlur= {this.handleOnBlur}></input>\r\n                            </div>\r\n                    <div>\r\n                        <button onClick = {this.handleNewClientBtnPress}>click</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ui-database-container\">\r\n                    <div className=\"ui-database-row-container\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientListAttempt2"]},"metadata":{},"sourceType":"module"}