{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\ReactProj\\\\login-page\\\\src\\\\components\\\\FormV2.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Question1 from './Questions/Question1';\nimport Question1a from './Questions/Question1a';\nimport Question2 from './Questions/Question2';\nimport Infotest from './Info/Infotest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet nextQuestions = [];\nconst answers = {\n  //need to define answer for input field questions to stop error: \"A component is changing an uncontrolled input of type text\"\n  q1: \"\",\n  q1a: \"\",\n  q2: \"\"\n};\nconst questionHistory = [{\n  questionName: \"q1\",\n  nextQuestionsHistory: []\n}];\n\nclass FormV2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.progressBar = () => {\n      const numQuestions = answers.length;\n    };\n\n    this.onBackButton = event => {\n      event.preventDefault();\n      questionHistory.pop();\n      const lastQuestion = questionHistory[questionHistory.length - 1];\n      nextQuestions = lastQuestion.nextQuestionsHistory;\n      this.setState({\n        currentQuestion: lastQuestion.questionName,\n        showInfoState: false\n      }); // console.dir(nextQuestions);\n      // console.dir(questionHistory);\n    };\n\n    this.onInfoButton = event => {\n      event.preventDefault();\n\n      if (this.state.showInfoState === false) {\n        this.setState({\n          showInfoState: true\n        });\n      }\n\n      if (this.state.showInfoState === true) {\n        this.setState({\n          showInfoState: false\n        });\n      }\n    };\n\n    this.onQuestionSubmit = (questionName, answer, nextQs) => {\n      answers[questionName] = answer;\n\n      if (answers.q1 === \"NO\") {\n        answers.q1a = \"\";\n      }\n\n      nextQuestions.shift();\n      nextQuestions.push(...nextQs);\n      questionHistory.push({\n        questionName: nextQuestions[0],\n        nextQuestionsHistory: nextQuestions.concat()\n      });\n      this.setState({\n        currentQuestion: nextQuestions[0],\n        showInfoState: false\n      });\n      console.log(questionName, answer); // console.dir(nextQuestions);\n\n      console.dir(answers); // console.dir(questionHistory);\n\n      console.log(\"\\n\");\n    };\n\n    this.state = {\n      currentQuestion: \"q1\",\n      showInfoState: false\n    };\n  }\n\n  render() {\n    const {\n      currentQuestion\n    } = this.state; // const currentQuestion = surveyQuestions[currentQuestionIndex];\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Form v2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Question \", currentQuestion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), this.state.currentQuestion === \"q1\" && /*#__PURE__*/_jsxDEV(Question1, {\n            initialvalue: answers[\"q1\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q1a\" && /*#__PURE__*/_jsxDEV(Question1a, {\n            initialvalue: answers[\"q1a\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q2\" && /*#__PURE__*/_jsxDEV(Question2, {\n            initialvalue: answers[\"q2\"],\n            onSubmit: this.onQuestionSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), this.state.showInfoState && /*#__PURE__*/_jsxDEV(Infotest, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"last-question-btn\",\n            onClick: this.onBackButton,\n            disabled: questionHistory.length === 1,\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"info-btn\",\n            onClick: this.onInfoButton,\n            children: \"More Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: \".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FormV2;","map":{"version":3,"sources":["C:/Users/sawye/Coding/ReactProj/login-page/src/components/FormV2.js"],"names":["React","Component","Link","Question1","Question1a","Question2","Infotest","nextQuestions","answers","q1","q1a","q2","questionHistory","questionName","nextQuestionsHistory","FormV2","constructor","props","progressBar","numQuestions","length","onBackButton","event","preventDefault","pop","lastQuestion","setState","currentQuestion","showInfoState","onInfoButton","state","onQuestionSubmit","answer","nextQs","shift","push","concat","console","log","dir","render","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Question1 from './Questions/Question1';\r\nimport Question1a from './Questions/Question1a';\r\nimport Question2 from './Questions/Question2';\r\nimport Infotest from './Info/Infotest';\r\n\r\nlet nextQuestions =[\r\n\r\n];\r\n\r\nconst answers = {\r\n    //need to define answer for input field questions to stop error: \"A component is changing an uncontrolled input of type text\"\r\n    q1: \"\",\r\n    q1a: \"\",\r\n    q2: \"\"\r\n};\r\n\r\nconst questionHistory = [\r\n{\r\n    questionName: \"q1\",\r\n    nextQuestionsHistory: []\r\n},\r\n];\r\n\r\nclass FormV2 extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            currentQuestion: \"q1\",\r\n            showInfoState: false,\r\n        };\r\n    }\r\n    \r\n    progressBar = () => {\r\n        const numQuestions = answers.length;\r\n    }\r\n\r\n    onBackButton = (event) => {\r\n        event.preventDefault();\r\n        \r\n        questionHistory.pop();\r\n        const lastQuestion = questionHistory[questionHistory.length-1];\r\n        nextQuestions = lastQuestion.nextQuestionsHistory; \r\n        this.setState({\r\n            currentQuestion: lastQuestion.questionName,\r\n            showInfoState: false\r\n        })\r\n        // console.dir(nextQuestions);\r\n        // console.dir(questionHistory);\r\n    }\r\n\r\n    onInfoButton = (event) =>{\r\n        event.preventDefault();\r\n        if(this.state.showInfoState === false){\r\n            this.setState({\r\n                showInfoState: true\r\n            })\r\n        }\r\n\r\n        if(this.state.showInfoState === true){\r\n            this.setState({\r\n                showInfoState: false\r\n            })\r\n        }\r\n    }\r\n\r\n    onQuestionSubmit = (questionName, answer, nextQs) => {\r\n        answers[questionName] = answer;\r\n\r\n        if(answers.q1 === \"NO\"){\r\n            answers.q1a = \"\";\r\n        }\r\n\r\n        nextQuestions.shift();\r\n        nextQuestions.push(...nextQs);\r\n\r\n        questionHistory.push({\r\n            questionName: nextQuestions[0],\r\n            nextQuestionsHistory: nextQuestions.concat()\r\n        })\r\n\r\n        this.setState({\r\n            currentQuestion: nextQuestions[0],\r\n            showInfoState: false\r\n        })\r\n        console.log(questionName, answer);\r\n        // console.dir(nextQuestions);\r\n        console.dir(answers);\r\n        // console.dir(questionHistory);\r\n        console.log(\"\\n\");\r\n    }\r\n   \r\n    render() {\r\n       \r\n        const {currentQuestion} = this.state;\r\n        // const currentQuestion = surveyQuestions[currentQuestionIndex];\r\n        \r\n        return (\r\n            <div>\r\n                \r\n                <div>\r\n                    <h1>Form v2</h1>\r\n                </div>\r\n\r\n                <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    \r\n                    <h5>Question {currentQuestion}</h5>\r\n\r\n                    {this.state.currentQuestion === \"q1\" && (\r\n                        <Question1 initialvalue={answers[\"q1\"]} onSubmit={this.onQuestionSubmit}></Question1>\r\n                    )}\r\n                    \r\n                    \r\n                    {this.state.currentQuestion === \"q1a\" && (\r\n                        <Question1a initialvalue={answers[\"q1a\"]} onSubmit={this.onQuestionSubmit}></Question1a>\r\n                    )}\r\n\r\n                    {this.state.currentQuestion === \"q2\" && (\r\n                        <Question2 initialvalue={answers[\"q2\"]} onSubmit={this.onQuestionSubmit}></Question2>\r\n                    )}\r\n\r\n                    {this.state.showInfoState && (\r\n                        <Infotest></Infotest>\r\n                    )}\r\n\r\n                    <button type=\"button\" className=\"last-question-btn\" onClick={this.onBackButton} disabled={questionHistory.length === 1}>Go Back</button>\r\n                    <button type=\"button\" className=\"info-btn\" onClick={this.onInfoButton}>More Info</button>\r\n                    <div className=\"progress-bar-container\">\r\n                        <div className=\"progress-bar\">\r\n                            .\r\n                        </div>\r\n                    </div>    \r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormV2"]},"metadata":{},"sourceType":"module"}