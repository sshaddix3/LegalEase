{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\FreeBirdProj\\\\main-app\\\\src\\\\components\\\\FormV3.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Question1 from './Questions/Question1';\nimport Question1a from './Questions/Question1a';\nimport Question2 from './Questions/Question2';\nimport Question3 from './Questions/Question3';\nimport Question4 from './Questions/Question4';\nimport Infotest from './Info/Infotest';\nimport NavMenu from './Nav/NavMenu';\nimport PDFbutton from './PDFbutton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst progBarQuestions = {\n  q1: \"\",\n  q2: \"\",\n  q3: \"\",\n  q4: \"\"\n};\nconst answers = {\n  q1: \"\",\n  q1a: \"\",\n  q2: \"\",\n  q3: \"\",\n  q4: \"\"\n};\n\nclass FormV3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.progressBar = () => {\n      let numOfQuestionsAnswered = 0;\n      let numOfQuestions = 0;\n\n      for (const property in progBarQuestions) {\n        if (progBarQuestions[property].length > 0) {\n          numOfQuestionsAnswered++;\n        }\n\n        numOfQuestions++;\n      }\n\n      const progress = numOfQuestionsAnswered / numOfQuestions;\n      this.setState({\n        progress: progress\n      });\n    };\n\n    this.onNavButton = () => {\n      if (this.state.navButton === false) {\n        this.setState({\n          navButton: true\n        });\n      } else {\n        this.setState({\n          navButton: false\n        });\n      }\n    };\n\n    this.onBackButton = event => {\n      event.preventDefault();\n      const questions = this.getQuestions();\n      const currentQIndex = questions.indexOf(this.state.currentQuestion);\n      const lastQIndex = currentQIndex - 1;\n      this.setState({\n        currentQuestion: questions[lastQIndex],\n        showInfoState: false\n      });\n    };\n\n    this.onInfoButton = event => {\n      event.preventDefault();\n\n      if (this.state.showInfoState === false) {\n        this.setState({\n          showInfoState: true\n        });\n      }\n\n      if (this.state.showInfoState === true) {\n        this.setState({\n          showInfoState: false\n        });\n      }\n    };\n\n    this.jumpQuestions = questionToGoTo => {\n      const questions = this.getQuestions();\n      const indexToGoTo = questions.indexOf(questionToGoTo);\n      this.setState({\n        currentQuestion: questions[indexToGoTo],\n        showInfoState: false\n      }, () => {\n        this.progressBar();\n      });\n    };\n\n    this.getQuestions = () => {\n      const questions = [\"q1\"];\n\n      if (answers[\"q1\"] === \"YES\") {\n        questions.push(\"q1a\");\n      }\n\n      questions.push(\"q2\");\n      questions.push(\"q3\");\n      questions.push(\"q4\");\n      return questions;\n    };\n\n    this.onQuestionResponseChange = (questionName, questionAnswer) => {\n      answers[questionName] = questionAnswer;\n\n      if (progBarQuestions.hasOwnProperty(`${questionName}`)) {\n        progBarQuestions[questionName] = questionAnswer;\n      }\n    };\n\n    this.onQuestionSubmit = (questionName, questionAnswer) => {\n      console.log(\"Submitting \" + questionName);\n      answers[questionName] = questionAnswer;\n\n      if (progBarQuestions.hasOwnProperty(`${questionName}`)) {\n        progBarQuestions[questionName] = questionAnswer;\n      } // get question list\n\n\n      const questions = this.getQuestions(); // find the current question in list\n\n      const currentQIndex = questions.indexOf(questionName); // find the next question in the list\n\n      const nextQIndex = currentQIndex + 1;\n\n      if (this.state.currentQuestion === questions[questions.length - 1]) {\n        console.log(answers);\n      }\n\n      this.setState({\n        currentQuestion: questions[nextQIndex],\n        showInfoState: false\n      }, () => {\n        this.progressBar();\n      });\n    };\n\n    this.state = {\n      currentQuestion: \"q1\",\n      showInfoState: false,\n      questionCounter: 0,\n      progress: null,\n      navButton: false\n    };\n  }\n\n  render() {\n    const {\n      currentQuestion\n    } = this.state;\n    const progressBarStylePercent = this.state.progress * 100;\n    const progressBarPercentRounded = Math.round(progressBarStylePercent);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"IN DEVELOPMENT------Form v3------IN DEVELOPMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [this.state.currentQuestion === \"q1\" && /*#__PURE__*/_jsxDEV(Question1, {\n            initialvalue: answers[\"q1\"],\n            onSubmit: this.onQuestionSubmit,\n            onChange: this.onQuestionResponseChange,\n            user: this.props.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q1a\" && /*#__PURE__*/_jsxDEV(Question1a, {\n            initialvalue: answers[\"q1a\"],\n            onSubmit: this.onQuestionSubmit,\n            onChange: this.onQuestionResponseChange,\n            user: this.props.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q2\" && /*#__PURE__*/_jsxDEV(Question2, {\n            initialvalue: answers[\"q2\"],\n            onSubmit: this.onQuestionSubmit,\n            onChange: this.onQuestionResponseChange,\n            user: this.props.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q3\" && /*#__PURE__*/_jsxDEV(Question3, {\n            initialvalue: answers[\"q3\"],\n            onSubmit: this.onQuestionSubmit,\n            onChange: this.onQuestionResponseChange,\n            user: this.props.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), this.state.currentQuestion === \"q4\" && /*#__PURE__*/_jsxDEV(Question4, {\n            initialvalue: answers[\"q4\"],\n            onSubmit: this.onQuestionSubmit,\n            onChange: this.onQuestionResponseChange,\n            user: this.props.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"last-question-btn\",\n            onClick: this.onBackButton,\n            disabled: currentQuestion === \"q1\",\n            children: \"Last Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"info-btn\",\n            onClick: this.onInfoButton,\n            children: \"More Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"open-navigation-btn\",\n            onClick: this.onNavButton,\n            children: \"Navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-stuff\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                style: {\n                  width: progressBarStylePercent + '%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar-label\",\n              children: `${progressBarPercentRounded}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), this.state.showInfoState && /*#__PURE__*/_jsxDEV(Infotest, {\n          currentQuestion: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), this.state.navButton && /*#__PURE__*/_jsxDEV(NavMenu, {\n          valueq1: answers[\"q1\"],\n          valueq1a: answers[\"q1a\"],\n          valueq2: answers[\"q2\"],\n          valueq3: answers[\"q3\"],\n          valueq4: answers[\"q4\"],\n          onSubmit: this.jumpQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FormV3;","map":{"version":3,"sources":["C:/Users/sawye/Coding/FreeBirdProj/main-app/src/components/FormV3.js"],"names":["React","Component","Link","Question1","Question1a","Question2","Question3","Question4","Infotest","NavMenu","PDFbutton","progBarQuestions","q1","q2","q3","q4","answers","q1a","FormV3","constructor","props","progressBar","numOfQuestionsAnswered","numOfQuestions","property","length","progress","setState","onNavButton","state","navButton","onBackButton","event","preventDefault","questions","getQuestions","currentQIndex","indexOf","currentQuestion","lastQIndex","showInfoState","onInfoButton","jumpQuestions","questionToGoTo","indexToGoTo","push","onQuestionResponseChange","questionName","questionAnswer","hasOwnProperty","onQuestionSubmit","console","log","nextQIndex","questionCounter","render","progressBarStylePercent","progressBarPercentRounded","Math","round","onSubmit","user","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Question1 from './Questions/Question1';\r\nimport Question1a from './Questions/Question1a';\r\nimport Question2 from './Questions/Question2';\r\nimport Question3 from './Questions/Question3';\r\nimport Question4 from './Questions/Question4';\r\nimport Infotest from './Info/Infotest';\r\nimport NavMenu from './Nav/NavMenu';\r\nimport PDFbutton from './PDFbutton';\r\n\r\nconst progBarQuestions = {\r\n    q1: \"\",\r\n    q2: \"\",\r\n    q3: \"\",\r\n    q4: \"\",\r\n};\r\n\r\nconst answers = {\r\n    q1: \"\",\r\n    q1a: \"\",\r\n    q2: \"\",\r\n    q3: \"\",\r\n    q4: \"\",\r\n};\r\n\r\nclass FormV3 extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            currentQuestion: \"q1\",\r\n            showInfoState: false,\r\n            questionCounter: 0,\r\n            progress: null,\r\n            navButton: false,\r\n        };\r\n    }\r\n    \r\n    progressBar = () => {\r\n        let numOfQuestionsAnswered = 0;\r\n        let numOfQuestions = 0;\r\n\r\n        for(const property in progBarQuestions){\r\n            if(progBarQuestions[property].length > 0){\r\n                numOfQuestionsAnswered++;\r\n            }\r\n            numOfQuestions++;\r\n        }\r\n        const progress = (numOfQuestionsAnswered / numOfQuestions);\r\n        this.setState({\r\n            progress: progress\r\n        })\r\n    }\r\n\r\n    onNavButton = () => {\r\n        if(this.state.navButton === false){\r\n            this.setState({\r\n                navButton: true\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                navButton: false\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    onBackButton = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const questions = this.getQuestions()\r\n        const currentQIndex = questions.indexOf(this.state.currentQuestion);\r\n\r\n\r\n        const lastQIndex = currentQIndex - 1;\r\n        \r\n        this.setState({\r\n            currentQuestion: questions[lastQIndex],\r\n            showInfoState: false,\r\n        })\r\n    }\r\n\r\n    onInfoButton = (event) =>{\r\n        event.preventDefault();\r\n        if(this.state.showInfoState === false){\r\n            this.setState({\r\n                showInfoState: true\r\n            })\r\n        }\r\n\r\n        if(this.state.showInfoState === true){\r\n            this.setState({\r\n                showInfoState: false\r\n            })\r\n        }\r\n    }\r\n\r\n    jumpQuestions = (questionToGoTo) =>{\r\n        const questions = this.getQuestions();\r\n        const indexToGoTo = questions.indexOf(questionToGoTo)\r\n\r\n        this.setState({\r\n            currentQuestion: questions[indexToGoTo],\r\n            showInfoState: false\r\n        }, () => {this.progressBar()})\r\n\r\n    }\r\n\r\n    getQuestions = () => {\r\n        const questions = [\"q1\"];\r\n\r\n        if(answers[\"q1\"] === \"YES\"){\r\n            questions.push(\"q1a\")\r\n        }\r\n\r\n        questions.push(\"q2\");\r\n        questions.push(\"q3\");\r\n        questions.push(\"q4\");\r\n\r\n        return questions;\r\n    }\r\n\r\n    onQuestionResponseChange = (questionName, questionAnswer) => {\r\n        answers[questionName] = questionAnswer;\r\n        if(progBarQuestions.hasOwnProperty(`${questionName}`)){\r\n            progBarQuestions[questionName] = questionAnswer;\r\n        }\r\n    }\r\n\r\n    onQuestionSubmit = (questionName, questionAnswer) => {\r\n        \r\n        console.log(\"Submitting \" + questionName);\r\n        answers[questionName] = questionAnswer;\r\n        if(progBarQuestions.hasOwnProperty(`${questionName}`)){\r\n            progBarQuestions[questionName] = questionAnswer;\r\n        }\r\n\r\n        // get question list\r\n        const questions = this.getQuestions();\r\n    \r\n        // find the current question in list\r\n        const currentQIndex = questions.indexOf(questionName);\r\n    \r\n        // find the next question in the list\r\n        const nextQIndex = currentQIndex + 1;\r\n\r\n        if(this.state.currentQuestion === questions[questions.length - 1]){\r\n            console.log(answers);\r\n        }\r\n\r\n        this.setState({\r\n            currentQuestion: questions[nextQIndex],\r\n            showInfoState: false\r\n        }, () => {this.progressBar()})\r\n        \r\n\r\n    }\r\n   \r\n    render() {\r\n\r\n        const {currentQuestion} = this.state;\r\n        \r\n        const progressBarStylePercent = this.state.progress * 100;\r\n        const progressBarPercentRounded = Math.round(progressBarStylePercent);\r\n\r\n        return (\r\n            <div>\r\n                \r\n                <div>\r\n                    <h1>IN DEVELOPMENT------Form v3------IN DEVELOPMENT</h1>\r\n                </div>\r\n\r\n                <div>\r\n                <form onSubmit={this.onSubmit}>\r\n\r\n                    {this.state.currentQuestion === \"q1\" && (\r\n                        <Question1 initialvalue={answers[\"q1\"]} onSubmit={this.onQuestionSubmit} onChange={this.onQuestionResponseChange} user={this.props.user}></Question1>\r\n                    )}\r\n                    \r\n                    \r\n                    {this.state.currentQuestion === \"q1a\" && (\r\n                        <Question1a initialvalue={answers[\"q1a\"]} onSubmit={this.onQuestionSubmit} onChange={this.onQuestionResponseChange} user={this.props.user}></Question1a>\r\n                    )}\r\n\r\n                    {this.state.currentQuestion === \"q2\" && (\r\n                        <Question2 initialvalue={answers[\"q2\"]} onSubmit={this.onQuestionSubmit} onChange={this.onQuestionResponseChange} user={this.props.user}></Question2>\r\n                    )}\r\n\r\n                    {this.state.currentQuestion === \"q3\" && (\r\n                        <Question3 initialvalue={answers[\"q3\"]} onSubmit={this.onQuestionSubmit} onChange={this.onQuestionResponseChange} user={this.props.user}></Question3>\r\n                    )}\r\n\r\n                    {this.state.currentQuestion === \"q4\" && (\r\n                        <Question4 initialvalue={answers[\"q4\"]} onSubmit={this.onQuestionSubmit} onChange={this.onQuestionResponseChange} user={this.props.user}></Question4>\r\n                    )}\r\n\r\n                    <button type=\"button\" className=\"last-question-btn\" onClick={this.onBackButton} disabled={currentQuestion === \"q1\"}>Last Question</button>\r\n                    <button type=\"button\" className=\"info-btn\" onClick={this.onInfoButton}>More Info</button>\r\n\r\n                    <button type=\"button\" className=\"open-navigation-btn\" onClick={this.onNavButton}>Navigation</button>\r\n\r\n                    <div className=\"progress-bar-stuff\">\r\n                        <div className=\"progress-bar-container\">\r\n                            <div className=\"progress-bar\" style={{width: progressBarStylePercent + '%'}}>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"progress-bar-label\">{`${progressBarPercentRounded}%`}</div>  \r\n                    </div>\r\n                </form>\r\n                \r\n                {this.state.showInfoState && (\r\n                    <Infotest currentQuestion={currentQuestion}></Infotest>\r\n                )}\r\n                {this.state.navButton && (\r\n                    <NavMenu valueq1={answers[\"q1\"]} valueq1a={answers[\"q1a\"]} valueq2={answers[\"q2\"]} valueq3={answers[\"q3\"]} valueq4={answers[\"q4\"]} onSubmit={this.jumpQuestions}></NavMenu>\r\n                )} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormV3"]},"metadata":{},"sourceType":"module"}