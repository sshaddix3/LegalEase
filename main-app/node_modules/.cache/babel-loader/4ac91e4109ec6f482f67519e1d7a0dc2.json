{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\FreeBirdProj\\\\login-page\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom'; // 1: Add element HTML\n// 2: Assign Component State to element value\n// 3: Assign onchange handler that updates the state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEmailChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handlePasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(`${this.state.email} ${this.state.password}`);\n      this.setState({\n        error: \"\"\n      });\n      const {\n        email,\n        password\n      } = this.state;\n      const requestBody = {\n        email: email,\n        password: password\n      };\n      console.log(requestBody);\n      fetch(\"http://localhost:3001/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(requestBody)\n      }).then(res => {\n        return res.json();\n      }).then(parsedResponse => {\n        console.log(parsedResponse);\n\n        if (parsedResponse.error) {\n          this.setState({\n            error: parsedResponse.error\n          });\n        } else {\n          this.setState({\n            isLoggedIn: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      isLoggedIn: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), this.state.error.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errordiv\",\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailinput\",\n            className: \"form-labels\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"emailinput\",\n            type: \"text\",\n            value: this.state.email,\n            onChange: this.handleEmailChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"textarea\",\n            className: \"form-labels\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"textarea\",\n            type: \"password\",\n            value: this.state.password,\n            onChange: this.handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), this.state.isLoggedIn && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        className: \"login-page-links\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/passwordreset\",\n        className: \"login-page-links\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/sawye/Coding/FreeBirdProj/login-page/src/components/Login.js"],"names":["React","Component","Link","Redirect","Login","constructor","props","handleEmailChange","event","setState","email","target","value","handlePasswordChange","password","handleSubmit","preventDefault","console","log","state","error","requestBody","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","parsedResponse","isLoggedIn","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n// 1: Add element HTML\r\n// 2: Assign Component State to element value\r\n// 3: Assign onchange handler that updates the state\r\n\r\n\r\nclass Login extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             email: \"\",\r\n             password: \"\",\r\n             error: \"\",\r\n             isLoggedIn: false \r\n        }\r\n    }\r\n        \r\n    handleEmailChange = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n    \r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(`${this.state.email} ${this.state.password}`);\r\n        \r\n        this.setState({\r\n            error: \"\"\r\n        })\r\n\r\n        const {email, password} = this.state;\r\n\r\n        const requestBody = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n\r\n        console.log(requestBody);\r\n\r\n        fetch(\"http://localhost:3001/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: \"include\",\r\n            body: JSON.stringify(requestBody) \r\n        }).then((res) => {\r\n            return res.json();\r\n        }).then((parsedResponse) => {\r\n            console.log(parsedResponse);\r\n            \r\n            if(parsedResponse.error){\r\n                this.setState({\r\n                    error: parsedResponse.error\r\n                });\r\n            }\r\n            else{\r\n                this.setState({\r\n                    isLoggedIn: true\r\n                });\r\n            }\r\n        })\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                {this.state.error.length > 0 && (\r\n                    <div className=\"errordiv\">\r\n                        {this.state.error}\r\n                    </div>\r\n                )}\r\n                <form onSubmit={this.handleSubmit}>\r\n                    \r\n                    {/* Email Input */}\r\n                    <div>\r\n                        <label htmlFor=\"emailinput\" className = \"form-labels\">Email Address</label>\r\n                        <input id=\"emailinput\" type=\"text\" value={this.state.email} onChange = {this.handleEmailChange}></input>\r\n                    </div>\r\n                    \r\n                    {/* Password Input */}\r\n                    <div>\r\n                        <label htmlFor =\"textarea\" className = \"form-labels\">Password</label>\r\n                        <input id=\"textarea\" type=\"password\" value={this.state.password} onChange={this.handlePasswordChange}></input>\r\n                    </div>\r\n                    \r\n                    {/* Submit Button */}\r\n                    <div>\r\n                        <button type=\"submit\">Submit</button>\r\n                    </div>\r\n\r\n                </form>\r\n                {this.state.isLoggedIn && (\r\n                    <Redirect to=\"/home\"></Redirect>\r\n                )}   \r\n                \r\n                <Link to='/register' className=\"login-page-links\">\r\n                            Register\r\n                </Link>\r\n                <Link to='/passwordreset' className=\"login-page-links\">\r\n                            Forgot Password?\r\n                </Link>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}