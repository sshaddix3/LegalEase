{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\ReactProj\\\\login-page\\\\src\\\\components\\\\Questions\\\\Question1a.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Question1a extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = () => {\n      const {\n        currentAnswerValue\n      } = this.state;\n      this.props.onChange(\"q1a\", currentAnswerValue);\n    };\n\n    this.renderQuestion = questionString => {\n      return questionString;\n    };\n\n    this.onElementUnfocused = event => {\n      console.log(this.props.user.id);\n      const {\n        currentAnswerValue\n      } = this.state;\n      const updateAnswerQ1aToDbBody = {\n        userID: this.props.user.id,\n        userName: this.props.user.name,\n        currAnswer: currentAnswerValue\n      };\n      fetch(\"http://localhost:3001/question1a\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(updateAnswerQ1aToDbBody)\n      }).then(res => {\n        return res.json();\n      }).then(parsedResponse => {\n        console.log(parsedResponse);\n      });\n    };\n\n    this.onHandleInput = event => {\n      event.preventDefault();\n      this.setState({\n        currentAnswerValue: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      const {\n        currentAnswerValue\n      } = this.state;\n      event.preventDefault();\n\n      if (!currentAnswerValue) {\n        return;\n      }\n\n      this.props.onSubmit(\"q1a\", currentAnswerValue);\n    };\n\n    this.state = {\n      currentAnswerValue: props.initialvalue\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderQuestion(\"Question 1a\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"q1a-input\",\n          onInput: this.onHandleInput,\n          value: this.state.currentAnswerValue,\n          onBlur: this.onElementUnfocused\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"next-question-btn\",\n          onClick: this.onSubmit,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Question1a;","map":{"version":3,"sources":["C:/Users/sawye/Coding/ReactProj/login-page/src/components/Questions/Question1a.js"],"names":["React","Component","Question1a","constructor","props","componentDidUpdate","currentAnswerValue","state","onChange","renderQuestion","questionString","onElementUnfocused","event","console","log","user","id","updateAnswerQ1aToDbBody","userID","userName","name","currAnswer","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","parsedResponse","onHandleInput","preventDefault","setState","target","value","onSubmit","initialvalue","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Question1a extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            currentAnswerValue: props.initialvalue\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate = () =>{\r\n        const {currentAnswerValue} = this.state;\r\n        this.props.onChange(\"q1a\", currentAnswerValue)\r\n    }\r\n\r\n    renderQuestion = (questionString) =>{\r\n        return questionString;\r\n    }\r\n    \r\n    onElementUnfocused = (event) => {\r\n        console.log(this.props.user.id);\r\n        const {currentAnswerValue} = this.state;\r\n\r\n        const updateAnswerQ1aToDbBody = {\r\n            userID: this.props.user.id,\r\n            userName: this.props.user.name,\r\n            currAnswer: currentAnswerValue,\r\n        }\r\n\r\n        fetch(\"http://localhost:3001/question1a\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: \"include\",\r\n            body: JSON.stringify(updateAnswerQ1aToDbBody) \r\n        }).then((res) => {\r\n            return res.json();\r\n        }).then((parsedResponse) => {\r\n            console.log(parsedResponse);\r\n        })\r\n\r\n    }\r\n\r\n    onHandleInput = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.setState({\r\n            currentAnswerValue: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) =>{\r\n        const {currentAnswerValue} = this.state;\r\n        event.preventDefault();\r\n\r\n        if(!currentAnswerValue){\r\n            return;\r\n        }\r\n        \r\n        this.props.onSubmit(\"q1a\", currentAnswerValue);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {this.renderQuestion(\"Question 1a\")}\r\n                </div>\r\n                <div>\r\n                    <input className=\"q1a-input\" onInput={this.onHandleInput} value={this.state.currentAnswerValue} onBlur={this.onElementUnfocused}></input>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"next-question-btn\" onClick={this.onSubmit}>Next Question</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question1a"]},"metadata":{},"sourceType":"module"}