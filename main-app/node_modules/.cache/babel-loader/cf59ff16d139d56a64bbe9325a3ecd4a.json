{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sawye\\\\Coding\\\\ReactProj\\\\login-page\\\\src\\\\components\\\\Form.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Question from './Question';\nimport TextAnswer from './SurveyAnswer/TextAnswer';\nimport AddressAnswer from './SurveyAnswer/AddressAnswer';\nimport MultChoiceAnswer from './SurveyAnswer/MultChoiceAnswer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst surveyQuestions = [{\n  questionContent: \"Have any papers been filed in this matter?\",\n  answerType: \"multchoice\",\n  defaultAnswerValue: \"\"\n}, {\n  questionContent: \"Where do you currently reside?\",\n  answerType: \"text\",\n  defaultAnswerValue: \"\"\n}, {\n  questionContent: \"Please enter your residence information\",\n  answerType: \"address\",\n  defaultAnswerValue: {\n    Address: \"\",\n    City: \"\",\n    County: \"\",\n    State: \"\"\n  }\n}, {\n  questionContent: \"blah\",\n  answerType: \"text\",\n  defaultAnswerValue: \"\"\n}];\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLastQuestionBtn = () => {\n      const {\n        currentQuestionIndex\n      } = this.state;\n      this.setState({\n        currentQuestionIndex: currentQuestionIndex - 1,\n        currentAnswerValue: surveyQuestions[currentQuestionIndex - 1].defaultAnswerValue\n      });\n    };\n\n    this.handleQuestionOneResponse = value => {\n      this.setState({\n        currentAnswerValue: value\n      });\n    };\n\n    this.handleQuestionTwoResponse = value => {\n      this.setState({\n        currentAnswerValue: value\n      });\n    };\n\n    this.handleQuestionThreeOption1 = value => {\n      this.setState({\n        currentAnswerValue: value\n      });\n      surveyQuestions.splice(1, 0, {\n        questionContent: \"Please select the statement that best describes the status of the papers that have been filed?\",\n        answerType: \"multchoice\",\n        defaultAnswerValue: \"\"\n      });\n    };\n\n    this.handleQuestionThreeOption2 = value => {\n      this.setState({\n        currentAnswerValue: value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        currentQuestionIndex,\n        currentAnswerValue\n      } = this.state;\n      surveyQuestions[currentQuestionIndex].defaultAnswerValue = currentAnswerValue;\n      console.log(currentQuestionIndex, currentAnswerValue);\n\n      if (currentQuestionIndex === surveyQuestions.length - 1) {\n        console.log(\"Survey complete\");\n      } else {\n        this.setState({\n          currentQuestionIndex: currentQuestionIndex + 1,\n          currentAnswerValue: surveyQuestions[currentQuestionIndex + 1].defaultAnswerValue\n        });\n      }\n    };\n\n    this.state = {\n      currentQuestionIndex: 0,\n      currentAnswerValue: surveyQuestions[0].defaultAnswerValue,\n      user: null,\n      question3: \"\"\n    };\n  }\n\n  render() {\n    const {\n      currentQuestionIndex\n    } = this.state;\n    const currentQuestion = surveyQuestions[currentQuestionIndex];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/homepage\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Question \", currentQuestionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Question, {\n            id: `question-${currentQuestionIndex}`,\n            content: currentQuestion.questionContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), currentQuestionIndex === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MultChoiceAnswer, {\n              value: \"YES\",\n              text: \"YES\",\n              handleMultChoiceResponse: this.handleQuestionThreeOption1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MultChoiceAnswer, {\n              value: \"NO\",\n              text: \"NO\",\n              handleMultChoiceResponse: this.handleQuestionThreeOption2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), currentQuestionIndex === 1 && /*#__PURE__*/_jsxDEV(TextAnswer, {\n            value: this.state.currentAnswerValue,\n            handleTextResponse: this.handleQuestionOneResponse,\n            answerLabel: currentQuestion.questionContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), currentQuestionIndex === 2 && /*#__PURE__*/_jsxDEV(AddressAnswer, {\n            value: this.state.currentAnswerValue,\n            handleAddressResponse: this.handleQuestionTwoResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"last-question-btn\",\n            onClick: this.handleLastQuestionBtn,\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"next-question-btn\",\n            children: \"Next Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/sawye/Coding/ReactProj/login-page/src/components/Form.js"],"names":["React","Component","Link","Question","TextAnswer","AddressAnswer","MultChoiceAnswer","surveyQuestions","questionContent","answerType","defaultAnswerValue","Address","City","County","State","Form","constructor","props","handleLastQuestionBtn","currentQuestionIndex","state","setState","currentAnswerValue","handleQuestionOneResponse","value","handleQuestionTwoResponse","handleQuestionThreeOption1","splice","handleQuestionThreeOption2","onSubmit","e","preventDefault","console","log","length","user","question3","render","currentQuestion"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Question from './Question';\r\nimport TextAnswer from './SurveyAnswer/TextAnswer';\r\nimport AddressAnswer from './SurveyAnswer/AddressAnswer';\r\nimport MultChoiceAnswer from './SurveyAnswer/MultChoiceAnswer';\r\n\r\n\r\nconst surveyQuestions = [\r\n    {\r\n        questionContent: \"Have any papers been filed in this matter?\",\r\n        answerType: \"multchoice\",\r\n        defaultAnswerValue: \"\"\r\n    },\r\n    {\r\n        questionContent: \"Where do you currently reside?\",\r\n        answerType: \"text\",\r\n        defaultAnswerValue: \"\"\r\n    },\r\n    {\r\n        questionContent: \"Please enter your residence information\",\r\n        answerType: \"address\",\r\n        defaultAnswerValue: {\r\n            Address: \"\",\r\n            City: \"\",\r\n            County: \"\",\r\n            State: \"\"\r\n        }\r\n    },\r\n    {\r\n        questionContent: \"blah\",\r\n        answerType: \"text\",\r\n        defaultAnswerValue: \"\"\r\n    }\r\n];\r\n\r\n\r\n\r\nclass Form extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            currentQuestionIndex: 0,\r\n            currentAnswerValue: surveyQuestions[0].defaultAnswerValue,\r\n            user: null,\r\n            question3: \"\"\r\n        };\r\n    }\r\n    \r\n    handleLastQuestionBtn = () => {\r\n        const {currentQuestionIndex} = this.state;\r\n        \r\n        this.setState({\r\n            currentQuestionIndex: currentQuestionIndex - 1,\r\n            currentAnswerValue: surveyQuestions[currentQuestionIndex-1].defaultAnswerValue\r\n        })\r\n    }\r\n\r\n    handleQuestionOneResponse = (value) => {\r\n        this.setState({\r\n            currentAnswerValue: value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleQuestionTwoResponse = (value) => {\r\n        this.setState({\r\n            currentAnswerValue: value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleQuestionThreeOption1 = (value) =>{\r\n        this.setState({\r\n            currentAnswerValue: value,\r\n        });\r\n\r\n        surveyQuestions.splice(1, 0, {\r\n            questionContent: \"Please select the statement that best describes the status of the papers that have been filed?\",\r\n            answerType: \"multchoice\",\r\n            defaultAnswerValue: \"\"\r\n        })\r\n    }\r\n\r\n    handleQuestionThreeOption2 = (value) => {\r\n        this.setState({\r\n            currentAnswerValue: value,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        const {currentQuestionIndex, currentAnswerValue} = this.state;\r\n\r\n        surveyQuestions[currentQuestionIndex].defaultAnswerValue = currentAnswerValue;\r\n        console.log(currentQuestionIndex, currentAnswerValue);\r\n\r\n        if (currentQuestionIndex === surveyQuestions.length - 1) {\r\n            console.log(\"Survey complete\");\r\n        } else {\r\n            this.setState({\r\n                currentQuestionIndex: currentQuestionIndex + 1,\r\n                currentAnswerValue: surveyQuestions[currentQuestionIndex + 1].defaultAnswerValue\r\n            });\r\n        }\r\n    }\r\n    \r\n   \r\n    render() {\r\n       \r\n        const {currentQuestionIndex} = this.state;\r\n        const currentQuestion = surveyQuestions[currentQuestionIndex];\r\n        \r\n        return (\r\n            <div>\r\n                \r\n                <div>\r\n                    <h1>Form</h1>\r\n                </div>\r\n                \r\n                <Link to='/homepage'>\r\n                    <div>Home</div>\r\n                </Link>\r\n\r\n                <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    \r\n                    <h5>Question {currentQuestionIndex + 1}</h5>\r\n                    <Question id={`question-${currentQuestionIndex}`} content={currentQuestion.questionContent}></Question>\r\n\r\n                    {currentQuestionIndex === 0 && (\r\n                        <div>\r\n                            <MultChoiceAnswer value=\"YES\" text=\"YES\"  handleMultChoiceResponse={this.handleQuestionThreeOption1}></MultChoiceAnswer>\r\n                            <MultChoiceAnswer value=\"NO\" text= \"NO\"  handleMultChoiceResponse={this.handleQuestionThreeOption2}></MultChoiceAnswer>\r\n                        </div>\r\n                    )}\r\n\r\n                    {currentQuestionIndex === 1 && (\r\n                        <TextAnswer value={this.state.currentAnswerValue} handleTextResponse={this.handleQuestionOneResponse} answerLabel={currentQuestion.questionContent}></TextAnswer>\r\n                    )}\r\n                    \r\n                    {currentQuestionIndex === 2 && (\r\n                         <AddressAnswer value={this.state.currentAnswerValue} handleAddressResponse={this.handleQuestionTwoResponse}></AddressAnswer>\r\n                    )}\r\n\r\n            \r\n                    <button type=\"button\" id=\"last-question-btn\" onClick={this.handleLastQuestionBtn}>Go Back</button>\r\n                    <button type=\"submit\" id=\"next-question-btn\">Next Question</button>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}